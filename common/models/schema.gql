#----------------------------------------------------------------
# DO NOT EDIT - GENERATED AUTOMATICALLY
# Mon Oct 05 2020 18:06:08 GMT+0530 (India Standard Time)
#----------------------------------------------------------------
# Medidata Sensor Cloud API v1
# The *Medidata Sensor Cloud* is an event-driven, scalable, stateful stream processing platform for ingesting, normalizing and delivering mobile health data collected from wearable medical devices to help clinical development professionals support existing and discover new clinical endpoints.
#----------------------------------------------------------------

"""
Marks types or fields as read only (disallows create, update and delete)
"""
directive @readonly on OBJECT | FIELD_DEFINITION

"""
Marks types or fields as immutable (allows create, disallows update and delete)
"""
directive @immutable on OBJECT | FIELD_DEFINITION

"""
For types that implement PlaysRole, this directive marks the field(s) that uniquely define the entity that plays the role
"""
directive @playsRole on FIELD_DEFINITION

"""Marks fields as unique"""
directive @unique on FIELD_DEFINITION

"""
Indicate how we plan to resolve types or fields to support static generation of derivative schemas.
"""
directive @resolve(
  """Indicate how a type or field will be resolved"""
  with: String!

  """Optional configuration in [HJSON](https://hjson.github.io/) format"""
  config: String
) on OBJECT | FIELD_DEFINITION

"""
For types that implement PlaysRole, indicates the `during.start` field contributes to the uniqueness of the entity that plays the role
"""
directive @event on OBJECT

"""For types that have mutation helpers defined in the code"""
directive @helper on OBJECT

"""For fields that represent one to many connections"""
directive @oneToMany on FIELD_DEFINITION

"""
Supports creating inverse relationships (studies have subjects and subjects have a study).
Same idea as [owl:inverseOf](https://www.w3.org/TR/owl-ref/#inverseOf-def).
"""
directive @inverseOf(
  """The targeted field on the other type"""
  field: String!
) on FIELD_DEFINITION

"""An interface for entities that have an audit trail"""
interface Auditable {
  """The most recent audit record for this $TYPE"""
  audit: AuditRecord! @readonly

  """Audit record history of this $TYPE"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A record to track changes to an entity over time"""
type AuditRecord @readonly {
  """The type of change made"""
  type: AuditRecordType!

  """When the change occurred"""
  mtime: DateTime!

  """The reason for the change"""
  reason: TranslatedText!

  """An identifier of the user responsible for the change"""
  userID: String!

  """The application under which the change was made"""
  appID: String!

  """The details of what was changed, serialized as a JSON object"""
  details: JSONObject!
}

"""A connection to `AuditRecords`"""
type AuditRecordConnection implements EntityConnection {
  """`AuditRecord` nodes"""
  nodes: [AuditRecord!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `AuditRecorConnections`"""
input AuditRecordConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `AuditRecords`"""
  filter: AuditRecordFilter
}

"""A filter for `AuditRecords`"""
input AuditRecordFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `type`"""
  type: AuditRecordTypeFilter

  """Filter for `mtime`"""
  mtime: DateTimeFilter

  """Filter for `reason`"""
  reason: TranslatedTextFilter

  """Filter for `userID`"""
  userID: StringFilter

  """Filter for `appID`"""
  appID: StringFilter

  """Filter for `details`"""
  details: JSONObjectFilter

  """Negation of an `AuditRecordFilter`"""
  not: AuditRecordFilter

  """Disjunction of `AuditRecordFilters`"""
  or: [AuditRecordFilter!]

  """Conjunction of `AuditRecordFilters`"""
  and: [AuditRecordFilter!]
}

"""An enumeration of change types for audit records"""
enum AuditRecordType {
  """An entity was created"""
  CREATED

  """An entity was updated"""
  UPDATED

  """An entity was deleted"""
  DELETED
}

"""A filter for `AuditRecordTypes`"""
input AuditRecordTypeFilter {
  """True if the value missing"""
  isNull: Boolean

  """If true, matches are case sensitive"""
  caseSensitive: Boolean

  """The value contains the specified string"""
  contains: String

  """The value starts with the specified string"""
  startsWith: String

  """The value ends with the specified string"""
  endsWith: String

  """The value matches the specified POSIX regular expression"""
  matchesRegex: String

  """The value equals the specified `String`"""
  eq: String

  """The value does not equal the specified `String`"""
  ne: String

  """The value is strictly less than the specified `String`"""
  lt: String

  """The value is less than or equal to the specified `String`"""
  le: String

  """The value is strictly greater than the specified `String`"""
  gt: String

  """The value is greater than or equal to the specified `String`"""
  ge: String

  """The value is a member of the specified `String` list"""
  in: [String!]

  """Negation of an `AuditRecordTypeFilter`"""
  not: AuditRecordTypeFilter

  """Disjunction of `AuditRecordTypeFilters`"""
  or: [AuditRecordTypeFilter!]

  """Conjunction of `AuditRecordTypeFilters`"""
  and: [AuditRecordTypeFilter!]
}

"""The `Boolean` scalar type represents `true` or `false`."""
scalar Boolean

"""A filter for `Booleans`"""
input BooleanFilter {
  """True if the value is missing"""
  isNull: Boolean

  """Test if the value is true or false"""
  is: Boolean

  """Negation of a BooleanFilter"""
  not: BooleanFilter

  """Disjunction of BooleanFilters"""
  or: [BooleanFilter!]

  """Conjunction of BooleanFilters"""
  and: [BooleanFilter!]
}

"""
An association between an entity and a concept that classifies the entity
"""
type Category implements Entity & Auditable & PlaysRole & WithTags {
  """Permanent system identifier for this `Category`"""
  id: ID! @unique

  """A common name for this `Category`"""
  name: String

  """A brief description of this `Category`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `Category`
  """
  url: URI @unique

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfCategory!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """
  A connection to extensible metadata entries currently or previously associated with this `Category`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """The classification for this category"""
  classification: CodedConcept! @playsRole

  """The most recent audit record for this `Category`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `Category`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `Categories`"""
type CategoryConnection implements EntityConnection {
  """`Category` nodes"""
  nodes: [Category!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `CategoryConnections`"""
input CategoryConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `Categories`"""
  filter: CategoryFilter
}

"""A filter for `Categories`"""
input CategoryFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `classification`"""
  classification: CodedConceptFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of a `CategoryFilter`"""
  not: CategoryFilter

  """Disjunction of `CategoryFilters`"""
  or: [CategoryFilter!]

  """Conjunction of `CategoryFilters`"""
  and: [CategoryFilter!]
}

"""A client application that interacts with the Medidata Sensor Cloud API"""
type ClientApp implements Entity & Auditable & WithIdentifiers & WithImages & WithCategories & WithTags & WithContacts & WithTrackingEvents {
  """Permanent system identifier for this `ClientApp`"""
  id: ID! @unique

  """A common name for this `ClientApp`"""
  name: String!

  """A brief description of this `ClientApp`"""
  description: String!

  """
  A url pointing to a resource with more detailed information about this `ClientApp`
  """
  url: URI! @unique

  """A connection to any other identifiers for this `ClientApp`"""
  identifiers(
    """Parameters to filter, sort, paginate the connection"""
    input: IdentifierConnectionInput
  ): IdentifierConnection!

  """A primary classification for this `ClientApp`"""
  type: CodedConcept

  """
  Categories this `ClientApp` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `ClientApp`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `ClientApp`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """Primary email address"""
  primaryEmail: ContactPoint @resolve(with: "CONNECTION_SUBSET", config: "{\n  connection: contactPoints\n  input: {\n    limit: 1\n    filter: {\n      and: [\n        {\n          isPrimary: {is: true}\n        },\n        {\n          type: {\n            curie: {eq: 'msc:contact-point/type/email'}\n          }\n        }\n      ]\n    }\n  }\n}")

  """Primary phone number"""
  primaryPhone: ContactPoint @resolve(with: "CONNECTION_SUBSET", config: "{\n  connection: contactPoints\n  input: {\n    limit: 1\n    filter: {\n      and: [\n        {\n          isPrimary: {is: true}\n        },\n        {\n          type: {\n            curie: {eq: 'msc:contact-point/type/phone'}\n          }\n        }\n      ]\n    }\n  }\n}")

  """A connection to query the contact points for this `ClientApp`"""
  contactPoints(
    """Parameters to filter, sort, paginate the connection"""
    input: ContactPointConnectionInput
  ): ContactPointConnection!

  """A connection to query the images for this `ClientApp`"""
  images(
    """Parameters to filter, sort, paginate the connection"""
    input: ImageRoleConnectionInput
  ): ImageRoleConnection!

  """The URL of the client applications privacy policy"""
  privacyUrl: URI!

  """The organization that owns the appliciation"""
  owner: Organization!

  """The most recent audit record for this `ClientApp`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `ClientApp`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `ClientApps`"""
type ClientAppConnection implements EntityConnection {
  """`ClientApp` nodes"""
  nodes: [ClientApp!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `ClientAppConnections`"""
input ClientAppConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `ClientApps`"""
  filter: ClientAppFilter
}

"""A filter for `ClientApps`"""
input ClientAppFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `identifiers`"""
  identifiers: IdentifierFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `contactPoints`"""
  contactPoints: ContactPointFilter

  """Filter for `images`"""
  images: ImageRoleFilter

  """Filter for `privacyUrl`"""
  privacyUrl: URIFilter

  """Filter for `owner`"""
  owner: OrganizationFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Negation of a `ClientAppFilter`"""
  not: ClientAppFilter

  """Disjunction of `ClientAppFilters`"""
  or: [ClientAppFilter!]

  """Conjunction of `ClientAppFilters`"""
  and: [ClientAppFilter!]
}

"""
Representation of an abstract idea using a symbol from a defined vocabulary or code system
"""
type CodedConcept implements Entity & Auditable & WithTags & WithTrackingEvents {
  """Permanent system identifier for this `CodedConcept`"""
  id: ID! @unique

  """Decoded English name of the concept"""
  name: String!

  """A brief description of this `CodedConcept`"""
  description: String

  """
  A full URI representing the concept in a given version of its vocabulary
  """
  url: URI! @unique

  """
  A connection to extensible metadata entries currently or previously associated with this `CodedConcept`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `CodedConcept`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """Unique concept identifier represented as a safe, compact URI"""
  curie: CodedConceptCurie! @unique

  """The formal vocabulary in which the concept is defined"""
  vocabulary: Vocabulary!

  """The most recent audit record for this `CodedConcept`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `CodedConcept`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `CodedConcepts`"""
type CodedConceptConnection implements EntityConnection {
  """`CodedConcept` nodes"""
  nodes: [CodedConcept!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `CodedConceptConnections`"""
input CodedConceptConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `CodedConcepts`"""
  filter: CodedConceptFilter
}

"""
A concept defined within a controlled terminology represented as a CURIE

A coded concept has the following semantic structure: `[system]:[code]`, where `[system]` is a well-known
namespace for the controlled terminology and `[code]` is the term within that terminology.
"""
scalar CodedConceptCurie

"""A filter for `CodedConceptCuries`"""
input CodedConceptCurieFilter {
  """True if the value is missing"""
  isNull: Boolean

  """The value equals the specified `CodedConceptCurie`"""
  eq: CodedConceptCurie

  """The value does not equal the specified `CodedConceptCurie`"""
  ne: CodedConceptCurie

  """Negation of a `CodedConceptCurieFilter`"""
  not: CodedConceptCurieFilter

  """Disjunction of `CodedConceptCurieFilters`"""
  or: [CodedConceptCurieFilter!]

  """Conjunction of `CodedConceptCurieFilters`"""
  and: [CodedConceptCurieFilter!]
}

"""A filter for `CodedConcepts`"""
input CodedConceptFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `curie`"""
  curie: CodedConceptCurieFilter

  """Filter for `vocabulary`"""
  vocabulary: VocabularyFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Negation of a `CodedConceptFilter`"""
  not: CodedConceptFilter

  """Disjunction of `CodedConceptFilters`"""
  or: [CodedConceptFilter!]

  """Conjunction of `CodedConceptFilters`"""
  and: [CodedConceptFilter!]
}

"""
Identifiers for technology-mediated communication endpoints

Entities with agency, like people, subjects, or organizations, use a variety of technologies to communicate.
`ContactPoints` are the identifiers that define an endpoint for these diverse communication media, like email,
phone, web, and social media.
"""
type ContactPoint implements Entity & Auditable & PlaysRole & WithCategories & WithDataQualityValues & WithTags & WithTrackingEvents {
  """Permanent system identifier for this `ContactPoint`"""
  id: ID! @unique

  """A common name for this `ContactPoint`"""
  name: String

  """A brief description of this `ContactPoint`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `ContactPoint`
  """
  url: URI @unique

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfContactPoint!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `ContactPoint`"""
  type: CodedConcept!

  """
  Categories this `ContactPoint` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `ContactPoint`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `ContactPoint`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """A connection to data quality values associated with this entity"""
  dataQualityValues(
    """Parameters to filter, sort, paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection!

  """The actual contact point details, like an email or phone number"""
  value: String! @playsRole

  """True if this contact point is the primary one of its type"""
  isPrimary: Boolean!

  """The most recent audit record for this `ContactPoint`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `ContactPoint`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `ContactPoints`"""
type ContactPointConnection implements EntityConnection {
  """`ContactPoint` nodes"""
  nodes: [ContactPoint!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `ContactPointConnections`"""
input ContactPointConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `ContactPoints`"""
  filter: ContactPointFilter
}

"""A filter for `ContactPoints`"""
input ContactPointFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `dataQualityValues`"""
  dataQualityValues: DataQualityValueFilter

  """Filter for `value`"""
  value: StringFilter

  """Filter for `isPrimary`"""
  isPrimary: BooleanFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of a `ContactPointFilter`"""
  not: ContactPointFilter

  """Disjunction of `ContactPointFilters`"""
  or: [ContactPointFilter!]

  """Conjunction of `ContactPointFilters`"""
  and: [ContactPointFilter!]
}

"""Role context types for `Categories`"""
union ContextTypesForCategory = ClientApp | ContactPoint | DataQualityMetric | DataQualityMetricRole | DataQualityValue | DeliveryStream | Device | DeviceModel | DeviceModelRole | DeviceRole | FunctionalExpression | FunctionalExpressionRole | Identifier | Image | ImageRole | Library | Location | LocationEvent | LocationRole | Observation | Organization | OrganizationRole | Person | PersonRole | PostalAddress | PostalAddressComponent | SensorStudy | SensorSubject | SensorSubjectRole | Tag | Token | TrackingEvent | Vocabulary

"""Role context types for `ContactPoints`"""
union ContextTypesForContactPoint = ClientApp | Organization | Person

"""Role context types for `DataQualityValues`"""
union ContextTypesForDataQualityValue = ContactPoint | DeliveryStream | Device | DeviceModel | Identifier | Image | Library | Location | Observation | Organization | Person | PostalAddress | PostalAddressComponent | SensorStudy | SensorSubject

"""Role context types for `DeviceRoles`"""
union ContextTypesForDeviceRole = Device | Organization | SensorSubject

"""Role context types for `Identifiers`"""
union ContextTypesForIdentifier = ClientApp | DeliveryStream | Device | DeviceModel | Organization | Person | SensorStudy | SensorSubject | Vocabulary

"""Role context types for `ImageRoles`"""
union ContextTypesForImageRole = ClientApp | Organization | Person

"""Role context types for `LocationRoles`"""
union ContextTypesForLocationRole = Organization | Person

"""Role context types for `OrganizationRoles`"""
union ContextTypesForOrganizationRole = Device | Organization | SensorStudy

"""Role context types for `PersonRoles`"""
union ContextTypesForPersonRole = Organization | SensorStudy | TrackingEvent

"""Role context types for `SensorSubjectRoles`"""
union ContextTypesForSensorSubjectRole = Device | SensorStudy

"""Role context types for `Tags`"""
union ContextTypesForTag = Category | ClientApp | CodedConcept | ContactPoint | DataQualityMetric | DataQualityMetricRole | DataQualityValue | DeliveryStream | Device | DeviceModel | DeviceModelRole | DeviceRole | FunctionalExpression | FunctionalExpressionRole | Identifier | Image | ImageRole | Library | Location | LocationEvent | LocationRole | Observation | Organization | OrganizationRole | Person | PersonRole | PostalAddress | PostalAddressComponent | SensorStudy | SensorSubject | SensorSubjectRole | Token | TrackingEvent | Vocabulary

"""Role context types for `Tokens`"""
union ContextTypesForToken = Organization | Person | SensorSubject

"""Role context types for `TrackingEvents`"""
union ContextTypesForTrackingEvent = ClientApp | CodedConcept | ContactPoint | DataQualityMetric | DataQualityMetricRole | DataQualityValue | DeliveryStream | Device | DeviceModel | DeviceModelRole | DeviceRole | FunctionalExpression | FunctionalExpressionRole | Identifier | Image | ImageRole | Library | Location | LocationEvent | LocationRole | Observation | Organization | OrganizationRole | Person | PersonRole | PostalAddress | PostalAddressComponent | SensorStudy | SensorSubject | SensorSubjectRole | Token | Vocabulary

"""An input for creating `Categories`"""
input CreateCategoryInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `classification`"""
  classification: RelCodedConceptInput!
}

"""An input for creating `ClientApps`"""
input CreateClientAppInput {
  """Set field `name`"""
  name: String!

  """Set field `description`"""
  description: String!

  """Set field `url`"""
  url: URI!

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `contactPoints`"""
  contactPoints: [RelContactPointInput!]

  """Set field `images`"""
  images: [RelImageRoleInput!]

  """Set field `privacyUrl`"""
  privacyUrl: URI!

  """Set field `owner`"""
  owner: RelOrganizationInput!
}

"""An input for creating `CodedConcepts`"""
input CreateCodedConceptInput {
  """Set field `name`"""
  name: String!

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI!

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `curie`"""
  curie: CodedConceptCurie!

  """Set field `vocabulary`"""
  vocabulary: RelVocabularyInput!
}

"""An input for creating `ContactPoints`"""
input CreateContactPointInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput!

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `value`"""
  value: String!

  """Set field `isPrimary`"""
  isPrimary: Boolean!
}

"""An input for creating `DataQualityMetrics`"""
input CreateDataQualityMetricInput {
  """Set field `name`"""
  name: String!

  """Set field `description`"""
  description: String!

  """Set field `url`"""
  url: URI

  """Set field `type`"""
  type: RelCodedConceptInput!

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `library`"""
  library: RelLibraryInput

  """Set field `version`"""
  version: String

  """Set field `expressions`"""
  expressions: [RelFunctionalExpressionRoleInput!]

  """Set field `unit`"""
  unit: RelCodedConceptInput!

  """Set field `topic`"""
  topic: String
}

"""An input for creating `DataQualityMetricRoles`"""
input CreateDataQualityMetricRoleInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `dataQualityMetric`"""
  dataQualityMetric: RelDataQualityMetricInput!

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for creating `DeliveryStreams`"""
input CreateDeliveryStreamInput {
  """Set field `name`"""
  name: String!

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI!

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `batchMimeType`"""
  batchMimeType: String

  """Set field `maxBatchSize`"""
  maxBatchSize: Int

  """Set field `maxBatchTime`"""
  maxBatchTime: Duration
}

"""An input for creating `Devices`"""
input CreateDeviceInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput!

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `locationEvents`"""
  locationEvents: [RelLocationEventInput!]

  """Set field `model`"""
  model: RelDeviceModelInput!

  """Set field `manufactureDate`"""
  manufactureDate: DateTime

  """Set field `expirationDate`"""
  expirationDate: DateTime

  """Set field `lotNumber`"""
  lotNumber: String

  """Set field `serialNumber`"""
  serialNumber: String

  """Set field `organizations`"""
  organizations: [RelOrganizationRoleInput!]

  """Set field `subjects`"""
  subjects: [RelSensorSubjectRoleInput!]

  """Set field `isPartOf`"""
  isPartOf: RelDeviceRoleInput

  """Set field `isCompleteKit`"""
  isCompleteKit: Boolean!

  """Set field `hasParts`"""
  hasParts: [RelDeviceRoleInput!]
}

"""An input for creating `DeviceModels`"""
input CreateDeviceModelInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput!

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `manufacturer`"""
  manufacturer: RelOrganizationInput!

  """Set field `brand`"""
  brand: String

  """Set field `modelNumber`"""
  modelNumber: String!

  """Set field `isSensor`"""
  isSensor: Boolean

  """Set field `properties`"""
  properties: [RelCategoryInput!]

  """Set field `isPartOf`"""
  isPartOf: RelDeviceModelRoleInput

  """Set field `hasParts`"""
  hasParts: [RelDeviceModelRoleInput!]
}

"""An input for creating `DeviceModelRoles`"""
input CreateDeviceModelRoleInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `deviceModel`"""
  deviceModel: RelDeviceModelInput!

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for creating `DeviceRoles`"""
input CreateDeviceRoleInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `device`"""
  device: RelDeviceInput!

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for creating `FunctionalExpressions`"""
input CreateFunctionalExpressionInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `type`"""
  type: RelCodedConceptInput!

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `library`"""
  library: RelLibraryInput

  """Set field `version`"""
  version: String!

  """Set field `language`"""
  language: RelCodedConceptInput!

  """Set field `evaluator`"""
  evaluator: RelCodedConceptInput!

  """Set field `target`"""
  target: RelCodedConceptInput!

  """Set field `expression`"""
  expression: String!

  """Set field `returnType`"""
  returnType: RelCodedConceptInput!
}

"""An input for creating `FunctionalExpressionRoles`"""
input CreateFunctionalExpressionRoleInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `functionalExpression`"""
  functionalExpression: RelFunctionalExpressionInput!

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for creating `Identifiers`"""
input CreateIdentifierInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `namespace`"""
  namespace: URI!

  """Set field `value`"""
  value: String!

  """Set field `isPrivate`"""
  isPrivate: Boolean

  """Set field `issuer`"""
  issuer: RelOrganizationInput

  """Set field `algorithm`"""
  algorithm: RelCodedConceptInput

  """Set field `jurisdiction`"""
  jurisdiction: RelCodedConceptInput
}

"""An input for creating `Images`"""
input CreateImageInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI!

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `mimeType`"""
  mimeType: String
}

"""An input for creating `ImageRoles`"""
input CreateImageRoleInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `image`"""
  image: RelImageInput!

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for creating `Libraries`"""
input CreateLibraryInput {
  """Set field `name`"""
  name: String!

  """Set field `description`"""
  description: String!

  """Set field `url`"""
  url: URI

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `organization`"""
  organization: RelOrganizationInput!

  """Set field `study`"""
  study: RelSensorStudyInput
}

"""An input for creating `LocationEvents`"""
input CreateLocationEventInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `location`"""
  location: RelLocationInput!
}

"""An input for creating `Locations`"""
input CreateLocationInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `locale`"""
  locale: RelCodedConceptInput

  """Set field `address`"""
  address: RelPostalAddressInput

  """Set field `geo`"""
  geo: JSON

  """Set field `utcOffset`"""
  utcOffset: Int
}

"""An input for creating `LocationRoles`"""
input CreateLocationRoleInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `location`"""
  location: RelLocationInput!

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for creating `Observations`"""
input CreateObservationInput {
  """Set field `name`"""
  name: String!

  """Set field `description`"""
  description: String!

  """Set field `url`"""
  url: URI!

  """Set field `type`"""
  type: RelCodedConceptInput!

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `property`"""
  property: CodedConceptCurie!

  """Set field `phenomenonTime`"""
  phenomenonTime: PeriodInput!

  """Set field `resultTime`"""
  resultTime: DateTime!

  """Set field `resultNanos`"""
  resultNanos: Int

  """Set field `processedTime`"""
  processedTime: DateTime!

  """Set field `study`"""
  study: RelSensorStudyInput!

  """Set field `site`"""
  site: RelOrganizationInput

  """Set field `subject`"""
  subject: RelSensorSubjectInput!

  """Set field `device`"""
  device: RelDeviceInput

  """Set field `sensor`"""
  sensor: RelDeviceInput

  """Set field `codedValue`"""
  codedValue: CodedConceptCurie

  """Set field `result`"""
  result: QuantityInput
}

"""An input for creating `Organizations`"""
input CreateOrganizationInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `contactPoints`"""
  contactPoints: [RelContactPointInput!]

  """Set field `images`"""
  images: [RelImageRoleInput!]

  """Set field `locations`"""
  locations: [RelLocationRoleInput!]

  """Set field `tokens`"""
  tokens: [RelTokenInput!]

  """Set field `superOrganization`"""
  superOrganization: RelOrganizationRoleInput

  """Set field `subOrganizations`"""
  subOrganizations: [RelOrganizationRoleInput!]

  """Set field `members`"""
  members: [RelPersonRoleInput!]

  """Set field `devices`"""
  devices: [RelDeviceRoleInput!]
}

"""An input for creating `OrganizationRoles`"""
input CreateOrganizationRoleInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `organization`"""
  organization: RelOrganizationInput!

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for creating `Persons`"""
input CreatePersonInput {
  """Set field `name`"""
  name: String!

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `contactPoints`"""
  contactPoints: [RelContactPointInput!]

  """Set field `images`"""
  images: [RelImageRoleInput!]

  """Set field `locations`"""
  locations: [RelLocationRoleInput!]

  """Set field `tokens`"""
  tokens: [RelTokenInput!]

  """Set field `nickname`"""
  nickname: String

  """Set field `age`"""
  age: Int

  """Set field `dob`"""
  dob: Date

  """Set field `gender`"""
  gender: RelCodedConceptInput

  """Set field `height`"""
  height: Float

  """Set field `weight`"""
  weight: Float
}

"""An input for creating `PersonRoles`"""
input CreatePersonRoleInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `person`"""
  person: RelPersonInput!

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for creating `PostalAddressComponents`"""
input CreatePostalAddressComponentInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput!

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `value`"""
  value: String!

  """Set field `abbreviation`"""
  abbreviation: String
}

"""An input for creating `PostalAddresses`"""
input CreatePostalAddressInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `text`"""
  text: String

  """Set field `country`"""
  country: RelCodedConceptInput

  """Set field `locale`"""
  locale: RelCodedConceptInput

  """Set field `stateProv`"""
  stateProv: RelCodedConceptInput

  """Set field `locality`"""
  locality: String

  """Set field `postalCode`"""
  postalCode: String

  """Set field `street1`"""
  street1: String

  """Set field `street2`"""
  street2: String

  """Set field `geo`"""
  geo: JSON

  """Set field `plusCode`"""
  plusCode: String

  """Set field `components`"""
  components: [RelPostalAddressComponentInput!]
}

"""An input for creating `SensorStudies`"""
input CreateSensorStudyInput {
  """Set field `name`"""
  name: String!

  """Set field `description`"""
  description: String!

  """Set field `url`"""
  url: URI

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `protocol_id`"""
  protocol_id: String!

  """Set field `phase`"""
  phase: RelCodedConceptInput!

  """Set field `primaryIndication`"""
  primaryIndication: RelCodedConceptInput!

  """Set field `secondaryIndications`"""
  secondaryIndications: [RelCategoryInput!]

  """Set field `organizations`"""
  organizations: [RelOrganizationRoleInput!]

  """Set field `persons`"""
  persons: [RelPersonRoleInput!]

  """Set field `subjects`"""
  subjects: [RelSensorSubjectRoleInput!]

  """Set field `deliveryStreams`"""
  deliveryStreams: [RelDeliveryStreamInput!]

  """Set field `dataQualityMetrics`"""
  dataQualityMetrics: [RelDataQualityMetricRoleInput!]

  """Set field `observations`"""
  observations: [RelObservationInput!]
}

"""An input for creating `SensorSubjects`"""
input CreateSensorSubjectInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `tokens`"""
  tokens: [RelTokenInput!]

  """Set field `person`"""
  person: RelPersonInput

  """Set field `study`"""
  study: RelSensorStudyInput!

  """Set field `site`"""
  site: RelOrganizationInput

  """Set field `devices`"""
  devices: [RelDeviceRoleInput!]

  """Set field `observations`"""
  observations: [RelObservationInput!]
}

"""An input for creating `SensorSubjectRoles`"""
input CreateSensorSubjectRoleInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `sensorSubject`"""
  sensorSubject: RelSensorSubjectInput!

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for creating `Tags`"""
input CreateTagInput {
  """Set field `name`"""
  name: String!

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `value`"""
  value: JSON!

  """Set field `tagIsSensitive`"""
  tagIsSensitive: Boolean
}

"""An input for creating `Tokens`"""
input CreateTokenInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput!

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `issuer`"""
  issuer: RelOrganizationInput!

  """Set field `token`"""
  token: String!
}

"""An input for creating `TrackingEvents`"""
input CreateTrackingEventInput {
  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String!

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput!

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput!

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `clientApp`"""
  clientApp: RelClientAppInput!

  """Set field `user`"""
  user: RelPersonRoleInput
}

"""An input for creating `Vocabularies`"""
input CreateVocabularyInput {
  """Set field `name`"""
  name: String!

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI!

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `library`"""
  library: RelLibraryInput

  """Set field `version`"""
  version: String

  """Set field `licence`"""
  licence: String

  """Set field `copyright`"""
  copyright: String

  """Set field `publisher`"""
  publisher: RelOrganizationInput
}

"""
A measurement of a particular dimension of data quality

Data quality is often defined in terms of various dimensions like `accuracy`,
`validity`, `completeness`, and `timeliness`. Each dimension can be measured in
many ways. This type represents a single such measurement. `DataQualityMetrics`
can be organized into shareable re-usabled `Libraries`, grouped into
`Categories` representing the quality dimension they measure, and defined with
`FunctionalExpressions` that implement the metric in the context of a particular
data stream.
"""
type DataQualityMetric implements Entity & Auditable & InLibrary & WithCategories & WithFunctionalExpressions & WithTags & WithTrackingEvents @helper {
  """Permanent system identifier for this `DataQualityMetric`"""
  id: ID! @unique

  """The name of the data quality metric"""
  name: String!

  """A brief description of this metric"""
  description: String!

  """
  A url pointing to a resource with more detailed information about this `DataQualityMetric`
  """
  url: URI @unique

  """The primary quality dimension this metric supports"""
  type: CodedConcept!

  """
  Categories this `DataQualityMetric` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `DataQualityMetric`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `DataQualityMetric`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """The library this entity is a member of"""
  library: Library

  """The version of the entity"""
  version: String

  """A connection to a set of expressions to compute a streaming value"""
  expressions(
    """Parameters to filter, sort, paginate the connection"""
    input: FunctionalExpressionRoleConnectionInput
  ): FunctionalExpressionRoleConnection!

  """The default unit in which quantities of this metric are expressed"""
  unit: CodedConcept!

  """
  Where the output stream should be directed (defaults to `data-quality-metrics`)
  """
  topic: String

  """The most recent audit record for this `DataQualityMetric`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `DataQualityMetric`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `DataQualityMetrics`"""
type DataQualityMetricConnection implements EntityConnection {
  """`DataQualityMetric` nodes"""
  nodes: [DataQualityMetric!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `DataQualityMetricConnections`"""
input DataQualityMetricConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `DataQualityMetrics`"""
  filter: DataQualityMetricFilter
}

"""A filter for `DataQualityMetrics`"""
input DataQualityMetricFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `library`"""
  library: LibraryFilter

  """Filter for `version`"""
  version: StringFilter

  """Filter for `expressions`"""
  expressions: FunctionalExpressionRoleFilter

  """Filter for `unit`"""
  unit: CodedConceptFilter

  """Filter for `topic`"""
  topic: StringFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Negation of a `DataQualityMetricFilter`"""
  not: DataQualityMetricFilter

  """Disjunction of `DataQualityMetricFilters`"""
  or: [DataQualityMetricFilter!]

  """Conjunction of `DataQualityMetricFilters`"""
  and: [DataQualityMetricFilter!]
}

"""A `DataQualityMetric` playing a role in the context of another entity"""
type DataQualityMetricRole implements Entity & Auditable & PlaysRole & WithCategories & WithTrackingEvents & WithTags {
  """Permanent system identifier for this `DataQualityMetricRole`"""
  id: ID! @unique

  """A common name for this `DataQualityMetricRole`"""
  name: String

  """A brief description of this `DataQualityMetricRole`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `DataQualityMetricRole`
  """
  url: URI @unique

  """The `DataQualityMetric` that plays the role"""
  dataQualityMetric: DataQualityMetric! @playsRole

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfDataQualityMetricRole!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `DataQualityMetricRole`"""
  type: CodedConcept

  """
  Categories this `DataQualityMetricRole` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `DataQualityMetricRole`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `DataQualityMetricRole`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """The most recent audit record for this `DataQualityMetricRole`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `DataQualityMetricRole`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `DataQualityMetricRoles`"""
type DataQualityMetricRoleConnection implements EntityConnection {
  """`DataQualityMetricRole` nodes"""
  nodes: [DataQualityMetricRole!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""
Filter, sort, paginate parameters for `DataQualityMetricRoleConnections`
"""
input DataQualityMetricRoleConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `DataQualityMetricRoles`"""
  filter: DataQualityMetricRoleFilter
}

"""A filter for `DataQualityMetricRoles`"""
input DataQualityMetricRoleFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `dataQualityMetric`"""
  dataQualityMetric: DataQualityMetricFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of a `DataQualityMetricRoleFilter`"""
  not: DataQualityMetricRoleFilter

  """Disjunction of `DataQualityMetricRoleFilters`"""
  or: [DataQualityMetricRoleFilter!]

  """Conjunction of `DataQualityMetricRoleFilters`"""
  and: [DataQualityMetricRoleFilter!]
}

"""
A numeric result of computing a `DataQualityMetric` in the context of an entity
"""
type DataQualityValue implements Entity & Auditable & PlaysRole & WithCategories & WithTags & WithTrackingEvents @readonly {
  """Permanent system identifier for this `DataQualityValue`"""
  id: ID! @unique

  """A common name for this `DataQualityValue`"""
  name: String

  """A brief description of this `DataQualityValue`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `DataQualityValue`
  """
  url: URI @unique

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfDataQualityValue!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `DataQualityValue`"""
  type: CodedConcept

  """
  Categories this `DataQualityValue` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `DataQualityValue`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `DataQualityValue`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """The source metric"""
  metric: DataQualityMetric! @playsRole

  """The result"""
  result: Quantity!

  """The most recent audit record for this `DataQualityValue`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `DataQualityValue`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `DataQualityValues`"""
type DataQualityValueConnection implements EntityConnection {
  """`DataQualityValue` nodes"""
  nodes: [DataQualityValue!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `DataQualityValueConnections`"""
input DataQualityValueConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `DataQualityValues`"""
  filter: DataQualityValueFilter
}

"""A filter for `DataQualityValues`"""
input DataQualityValueFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `metric`"""
  metric: DataQualityMetricFilter

  """Filter for `result`"""
  result: QuantityFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of a `DataQualityValueFilter`"""
  not: DataQualityValueFilter

  """Disjunction of `DataQualityValueFilters`"""
  or: [DataQualityValueFilter!]

  """Conjunction of `DataQualityValueFilters`"""
  and: [DataQualityValueFilter!]
}

"""
ISO-8601 Date

This date value accepts date strings of the form `YYYY-MM-DD[Z|±hh:mm]`. This scalar accepts
time zone offsets. The time zone offset must be either `Z` for UTC time or `±hh:mm` for other time zones.
The punctuation is optional, so strings like `YYYYMMDD-0700` are allowed.
See [ISO-8601 Date](https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates).

"""
scalar Date

"""A filter for `Dates`"""
input DateFilter {
  """True if the value missing"""
  isNull: Boolean

  """The value equals the specified `Date`"""
  eq: Date

  """The value does not equal the specified `Date`"""
  ne: Date

  """The value is strictly less than the specified `Date`"""
  lt: Date

  """The value is less than or equal to the specified `Date`"""
  le: Date

  """The value is strictly greater than the specified `Date`"""
  gt: Date

  """The value is greater than or equal to the specified `Date`"""
  ge: Date

  """The value is a member of the specified `Date` list"""
  in: [Date!]

  """Negation of a `DateFilter`"""
  not: DateFilter

  """Disjunction of `DateFilters`"""
  or: [DateFilter!]

  """Conjunction of `DateFilters`"""
  and: [DateFilter!]
}

"""
An ISO8601 DateTime

This scalar accepts datetime strings of the form `YYYY-MM-DDThh:mm:ss.sss[Z|±hh:mm]`.
Fractional seconds may be specified to nanosecond precision. The optional time zone offset
must be either `Z` for UTC time or `±hh:mm` for other time zones.

The punctuation is optional, so strings like `YYYYMMDDThhmmss.sss-0700` are allowed
"""
scalar DateTime

"""A filter for `DateTimes`"""
input DateTimeFilter {
  """True if the value missing"""
  isNull: Boolean

  """The value equals the specified `DateTime`"""
  eq: DateTime

  """The value does not equal the specified `DateTime`"""
  ne: DateTime

  """The value is strictly less than the specified `DateTime`"""
  lt: DateTime

  """The value is less than or equal to the specified `DateTime`"""
  le: DateTime

  """The value is strictly greater than the specified `DateTime`"""
  gt: DateTime

  """The value is greater than or equal to the specified `DateTime`"""
  ge: DateTime

  """The value is a member of the specified `DateTime` list"""
  in: [DateTime!]

  """Negation of a `DateTimeFilter`"""
  not: DateTimeFilter

  """Disjunction of `DateTimeFilters`"""
  or: [DateTimeFilter!]

  """Conjunction of `DateTimeFilters`"""
  and: [DateTimeFilter!]
}

"""
A destination for validated sensor observations

A `DeliveryStream` defines where to send validated, common model sensor observations in the context of a particular study.
Usually an S3 or SFTP url.
"""
type DeliveryStream implements Entity & Auditable & PlaysRole & WithIdentifiers & WithDataQualityValues & WithCategories & WithTags & WithTrackingEvents @helper {
  """Permanent system identifier for this `DeliveryStream`"""
  id: ID! @unique

  """A common name for this `DeliveryStream`"""
  name: String!

  """A brief description of this `DeliveryStream`"""
  description: String

  """
  The URL to which to send data, including userinfo, if needed, and port.
  """
  url: URI! @playsRole

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfDeliveryStream!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A connection to any other identifiers for this `DeliveryStream`"""
  identifiers(
    """Parameters to filter, sort, paginate the connection"""
    input: IdentifierConnectionInput
  ): IdentifierConnection!

  """A primary classification for this `DeliveryStream`"""
  type: CodedConcept

  """
  Categories this `DeliveryStream` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `DeliveryStream`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `DeliveryStream`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """A connection to data quality values associated with this entity"""
  dataQualityValues(
    """Parameters to filter, sort, paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection!

  """
  Format of the delivered batch. Defaults to `text/csv` (CSV). Other accepted values include `application/x-ndjson` (newline-delimited JSON).
  """
  batchMimeType: String

  """
  Max size (in bytes) to collect before delivering a batch. Defaults to `384MB`.
  """
  maxBatchSize: Int

  """
  Max time to wait before a partially filled batch is delivered. Defaults to `PT1H` (one hour).
  """
  maxBatchTime: Duration

  """The most recent audit record for this `DeliveryStream`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `DeliveryStream`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `DeliveryStreams`"""
type DeliveryStreamConnection implements EntityConnection {
  """`DeliveryStream` nodes"""
  nodes: [DeliveryStream!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `DeliveryStreamConnections`"""
input DeliveryStreamConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `DeliveryStreams`"""
  filter: DeliveryStreamFilter
}

"""A filter for `DeliveryStreams`"""
input DeliveryStreamFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `identifiers`"""
  identifiers: IdentifierFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `dataQualityValues`"""
  dataQualityValues: DataQualityValueFilter

  """Filter for `batchMimeType`"""
  batchMimeType: StringFilter

  """Filter for `maxBatchSize`"""
  maxBatchSize: IntFilter

  """Filter for `maxBatchTime`"""
  maxBatchTime: DurationFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of a `DeliveryStreamFilter`"""
  not: DeliveryStreamFilter

  """Disjunction of `DeliveryStreamFilters`"""
  or: [DeliveryStreamFilter!]

  """Conjunction of `DeliveryStreamFilters`"""
  and: [DeliveryStreamFilter!]
}

"""
A device that participates in capturing human biometrics

A `Device` is a specific physical asset and an instance of a corresponding `DeviceModel`. A `Device` can be a unique part, or
an assembly of multiple parts.
"""
type Device implements Entity & Auditable & WithCategories & WithIdentifiers & WithDataQualityValues & WithLocationEvents & WithTags & WithTrackingEvents @helper {
  """Permanent system identifier for this `Device`"""
  id: ID! @unique

  """A common name for this `Device`"""
  name: String

  """A brief description of this `Device`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `Device`
  """
  url: URI @unique

  """A connection to any other identifiers for this `Device`"""
  identifiers(
    """Parameters to filter, sort, paginate the connection"""
    input: IdentifierConnectionInput
  ): IdentifierConnection!

  """
  The primary sensor device category of this device (like CGM, Actigraphy, ECG, Spirometry, etc)
  """
  type: CodedConcept!

  """Categories this `Device` embodies beyond its primary classified `type`"""
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `Device`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `Device`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """A connection to data quality values associated with this entity"""
  dataQualityValues(
    """Parameters to filter, sort, paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection!

  """A connection to query places this `Device` has been"""
  locationEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: LocationEventConnectionInput
  ): LocationEventConnection!

  """The model of device"""
  model: DeviceModel!

  """The manufacture date of this device"""
  manufactureDate: DateTime

  """The expiration date of this device"""
  expirationDate: DateTime

  """The lot number (also available via `identifiers` connection)"""
  lotNumber: String

  """The serial number (also available via `identifiers` connection)"""
  serialNumber: String

  """A connection to all organizations involved with this device over time"""
  organizations(
    """Parameters to filter, sort, and paginate the connection"""
    input: OrganizationRoleConnectionInput
  ): OrganizationRoleConnection!

  """The current site assignment for this device, if any"""
  site: OrganizationRole @resolve(with: "CONNECTION_SUBSET", config: "{\n  connection: organizations\n  isActive: true\n}")

  """A connection to all subjects assigned this device over time"""
  subjects(
    """Parameters to filter, sort, and paginate the connection"""
    input: SensorSubjectRoleConnectionInput
  ): SensorSubjectRoleConnection!

  """The current subject assignment for this device, if any"""
  subject: SensorSubjectRole @resolve(with: "CONNECTION_SUBSET", config: "{\n  connection: subjects\n  isActive: true\n}")

  """Another device that this device is part of"""
  isPartOf: DeviceRole @resolve(with: "CONNECTION_HIER_PARENT")

  """True if `isPartOf` is null"""
  isCompleteKit: Boolean!

  """Other devices that are parts of this device"""
  hasParts(
    """Parameters to filter, sort, and paginate the connection"""
    input: DeviceRoleConnectionInput
  ): DeviceRoleConnection! @resolve(with: "CONNECTION_HIER_CHILDREN")

  """The most recent audit record for this `Device`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `Device`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `Devices`"""
type DeviceConnection implements EntityConnection {
  """`Device` nodes"""
  nodes: [Device!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `DeviceConnections`"""
input DeviceConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `Devices`"""
  filter: DeviceFilter
}

"""A filter for `Devices`"""
input DeviceFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `identifiers`"""
  identifiers: IdentifierFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `dataQualityValues`"""
  dataQualityValues: DataQualityValueFilter

  """Filter for `locationEvents`"""
  locationEvents: LocationEventFilter

  """Filter for `model`"""
  model: DeviceModelFilter

  """Filter for `manufactureDate`"""
  manufactureDate: DateTimeFilter

  """Filter for `expirationDate`"""
  expirationDate: DateTimeFilter

  """Filter for `lotNumber`"""
  lotNumber: StringFilter

  """Filter for `serialNumber`"""
  serialNumber: StringFilter

  """Filter for `organizations`"""
  organizations: OrganizationRoleFilter

  """Filter for `subjects`"""
  subjects: SensorSubjectRoleFilter

  """Filter for `isCompleteKit`"""
  isCompleteKit: BooleanFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Negation of a `DeviceFilter`"""
  not: DeviceFilter

  """Disjunction of `DeviceFilters`"""
  or: [DeviceFilter!]

  """Conjunction of `DeviceFilters`"""
  and: [DeviceFilter!]
}

"""
A type of connected, wearable biometric device

This entity represents a particular class of manufactured medical devices, like a `Dexcom G6`, or an `MC10 BioStamp nPoint`.
Compare this to a `Device` which represents a specific instance of this class of devices. Like `Devices`, `DeviceModels`
can represent a unique part of a design or an assembly of multiple design elements.
"""
type DeviceModel implements Entity & Auditable & WithCategories & WithDataQualityValues & WithIdentifiers & WithTags & WithTrackingEvents @helper {
  """Permanent system identifier for this `DeviceModel`"""
  id: ID! @unique

  """A common name for this `DeviceModel`"""
  name: String

  """A brief description of this `DeviceModel`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `DeviceModel`
  """
  url: URI @unique

  """A connection to any other identifiers for this `DeviceModel`"""
  identifiers(
    """Parameters to filter, sort, paginate the connection"""
    input: IdentifierConnectionInput
  ): IdentifierConnection!

  """
  The primary sensor device category of this device (like CGM, Actigraphy, ECG, Spirometry, etc)
  """
  type: CodedConcept!

  """
  Categories this `DeviceModel` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `DeviceModel`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `DeviceModel`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """A connection to data quality values associated with this entity"""
  dataQualityValues(
    """Parameters to filter, sort, paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection!

  """The asset model manufacturer, like the Dexcom Organization"""
  manufacturer: Organization!

  """The brand of the asset model, like "Dexcom"."""
  brand: String

  """
  The asset model number, like "DEX TOE001P"
  """
  modelNumber: String!

  """Indicates if this asset model is a sensor or not"""
  isSensor: Boolean

  """
  The observable properties a device asset belonging to this model is capable of emitting, if its a sensor
  """
  properties(
    """Parameters to filter, sort, and paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """Another device asset model that this model is part of"""
  isPartOf: DeviceModelRole @resolve(with: "CONNECTION_HIER_PARENT")

  """Other asset models that are part of this asset model"""
  hasParts(
    """Parameters to filter, sort, and paginate the connection"""
    input: DeviceModelRoleConnectionInput
  ): DeviceModelRoleConnection! @resolve(with: "CONNECTION_HIER_CHILDREN")

  """The most recent audit record for this `DeviceModel`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `DeviceModel`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `DeviceModels`"""
type DeviceModelConnection implements EntityConnection {
  """`DeviceModel` nodes"""
  nodes: [DeviceModel!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `DeviceModelConnections`"""
input DeviceModelConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `DeviceModels`"""
  filter: DeviceModelFilter
}

"""A filter for `DeviceModels`"""
input DeviceModelFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `identifiers`"""
  identifiers: IdentifierFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `dataQualityValues`"""
  dataQualityValues: DataQualityValueFilter

  """Filter for `manufacturer`"""
  manufacturer: OrganizationFilter

  """Filter for `brand`"""
  brand: StringFilter

  """Filter for `modelNumber`"""
  modelNumber: StringFilter

  """Filter for `isSensor`"""
  isSensor: BooleanFilter

  """Filter for `properties`"""
  properties: CategoryFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Negation of a `DeviceModelFilter`"""
  not: DeviceModelFilter

  """Disjunction of `DeviceModelFilters`"""
  or: [DeviceModelFilter!]

  """Conjunction of `DeviceModelFilters`"""
  and: [DeviceModelFilter!]
}

"""A `DeviceModel` playing a role in the context of another entity"""
type DeviceModelRole implements Entity & Auditable & PlaysRole & WithCategories & WithTrackingEvents & WithTags {
  """Permanent system identifier for this `DeviceModelRole`"""
  id: ID! @unique

  """A common name for this `DeviceModelRole`"""
  name: String

  """A brief description of this `DeviceModelRole`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `DeviceModelRole`
  """
  url: URI @unique

  """The `DeviceModel` that plays the role"""
  deviceModel: DeviceModel! @playsRole

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfDeviceModelRole!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `DeviceModelRole`"""
  type: CodedConcept

  """
  Categories this `DeviceModelRole` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `DeviceModelRole`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `DeviceModelRole`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """The most recent audit record for this `DeviceModelRole`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `DeviceModelRole`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `DeviceModelRoles`"""
type DeviceModelRoleConnection implements EntityConnection {
  """`DeviceModelRole` nodes"""
  nodes: [DeviceModelRole!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `DeviceModelRoleConnections`"""
input DeviceModelRoleConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `DeviceModelRoles`"""
  filter: DeviceModelRoleFilter
}

"""A filter for `DeviceModelRoles`"""
input DeviceModelRoleFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `deviceModel`"""
  deviceModel: DeviceModelFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of a `DeviceModelRoleFilter`"""
  not: DeviceModelRoleFilter

  """Disjunction of `DeviceModelRoleFilters`"""
  or: [DeviceModelRoleFilter!]

  """Conjunction of `DeviceModelRoleFilters`"""
  and: [DeviceModelRoleFilter!]
}

"""A `Device` playing a role in the context of another entity"""
type DeviceRole implements Entity & Auditable & PlaysRole & WithCategories & WithTrackingEvents & WithTags {
  """Permanent system identifier for this `DeviceRole`"""
  id: ID! @unique

  """A common name for this `DeviceRole`"""
  name: String

  """A brief description of this `DeviceRole`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `DeviceRole`
  """
  url: URI @unique

  """The `Device` that plays the role"""
  device: Device! @playsRole

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfDeviceRole!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `DeviceRole`"""
  type: CodedConcept

  """
  Categories this `DeviceRole` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `DeviceRole`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `DeviceRole`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """The most recent audit record for this `DeviceRole`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `DeviceRole`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `DeviceRoles`"""
type DeviceRoleConnection implements EntityConnection {
  """`DeviceRole` nodes"""
  nodes: [DeviceRole!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `DeviceRoleConnections`"""
input DeviceRoleConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `DeviceRoles`"""
  filter: DeviceRoleFilter
}

"""A filter for `DeviceRoles`"""
input DeviceRoleFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `device`"""
  device: DeviceFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of a `DeviceRoleFilter`"""
  not: DeviceRoleFilter

  """Disjunction of `DeviceRoleFilters`"""
  or: [DeviceRoleFilter!]

  """Conjunction of `DeviceRoleFilters`"""
  and: [DeviceRoleFilter!]
}

"""
An [ISO-8601 Duration](https://en.wikipedia.org/wiki/ISO_8601#Durations) specifier of the form `PnYnMnDTnHnMnS`.

>Note that `P1M` represents one month, while `PT1M` represents one minute.

>Note also that the lowest order component may have a decimal fraction.
> - 492 milliseconds => `PT0.492S`
> - 3.5 days => `PT3.5D`
"""
scalar Duration

"""A filter for `Durations`"""
input DurationFilter {
  """True if the value missing"""
  isNull: Boolean

  """The value equals the specified `Duration`"""
  eq: Duration

  """The value does not equal the specified `Duration`"""
  ne: Duration

  """The value is strictly less than the specified `Duration`"""
  lt: Duration

  """The value is less than or equal to the specified `Duration`"""
  le: Duration

  """The value is strictly greater than the specified `Duration`"""
  gt: Duration

  """The value is greater than or equal to the specified `Duration`"""
  ge: Duration

  """The value is a member of the specified `Duration` list"""
  in: [Duration!]

  """Negation of a `DurationFilter`"""
  not: DurationFilter

  """Disjunction of `DurationFilters`"""
  or: [DurationFilter!]

  """Conjunction of `DurationFilters`"""
  and: [DurationFilter!]
}

"""An interface for connection types"""
interface EntityConnection {
  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""
The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
"""
scalar Float

"""A filter for `Floats`"""
input FloatFilter {
  """True if the value missing"""
  isNull: Boolean

  """
  The accuracy with which filter comparisons are evaluated. Default is 1e-8.
  """
  tolerance: Float

  """The value equals the specified `Float`"""
  eq: Float

  """The value does not equal the specified `Float`"""
  ne: Float

  """The value is strictly less than the specified `Float`"""
  lt: Float

  """The value is less than or equal to the specified `Float`"""
  le: Float

  """The value is strictly greater than the specified `Float`"""
  gt: Float

  """The value is greater than or equal to the specified `Float`"""
  ge: Float

  """The value is a member of the specified `Float` list"""
  in: [Float!]

  """Negation of a `FloatFilter`"""
  not: FloatFilter

  """Disjunction of `FloatFilters`"""
  or: [FloatFilter!]

  """Conjunction of `FloatFilters`"""
  and: [FloatFilter!]
}

"""
An side-effect free functional expression

`FunctionalExpressions` are written in a particular programming language,
and are intended for evaluation in a particular execution context, that expects
a given input type (the `target`), and returns a non-void type native to the
expression language.
"""
type FunctionalExpression implements Entity & Auditable & InLibrary & WithCategories & WithTags & WithTrackingEvents {
  """Permanent system identifier for this `FunctionalExpression`"""
  id: ID! @unique

  """A common name for this `FunctionalExpression`"""
  name: String

  """A brief description of this `FunctionalExpression`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `FunctionalExpression`
  """
  url: URI @unique

  """
  A primary category for this formal expression, like `msc:formal-expression/type/filter`
  or `msc:formal-expression/type/flatMap`
  """
  type: CodedConcept!

  """
  Categories this `FunctionalExpression` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `FunctionalExpression`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `FunctionalExpression`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """The library this entity is a member of"""
  library: Library

  """A version of this expression"""
  version: String!

  """
  A language context for the formal expression, such as `msc:formal-expression/language/scala`
  """
  language: CodedConcept!

  """
  An evaluation context for the formal expression, such as `msc:formal-expression/evaluator/flink`
  """
  evaluator: CodedConcept!

  """
  A instance of this target type will be passed into the functional expression as input
  """
  target: CodedConcept!

  """The function itself"""
  expression: String!

  """A return type for the function"""
  returnType: CodedConcept!

  """The most recent audit record for this `FunctionalExpression`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `FunctionalExpression`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `FunctionalExpressions`"""
type FunctionalExpressionConnection implements EntityConnection {
  """`FunctionalExpression` nodes"""
  nodes: [FunctionalExpression!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""
Filter, sort, paginate parameters for `FunctionalExpressionConnections`
"""
input FunctionalExpressionConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `FunctionalExpressions`"""
  filter: FunctionalExpressionFilter
}

"""A filter for `FunctionalExpressions`"""
input FunctionalExpressionFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `library`"""
  library: LibraryFilter

  """Filter for `version`"""
  version: StringFilter

  """Filter for `language`"""
  language: CodedConceptFilter

  """Filter for `evaluator`"""
  evaluator: CodedConceptFilter

  """Filter for `target`"""
  target: CodedConceptFilter

  """Filter for `expression`"""
  expression: StringFilter

  """Filter for `returnType`"""
  returnType: CodedConceptFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Negation of a `FunctionalExpressionFilter`"""
  not: FunctionalExpressionFilter

  """Disjunction of `FunctionalExpressionFilters`"""
  or: [FunctionalExpressionFilter!]

  """Conjunction of `FunctionalExpressionFilters`"""
  and: [FunctionalExpressionFilter!]
}

"""
A `FunctionalExpression` playing a role in the context of another entity
"""
type FunctionalExpressionRole implements Entity & Auditable & PlaysRole & WithCategories & WithTrackingEvents & WithTags {
  """Permanent system identifier for this `FunctionalExpressionRole`"""
  id: ID! @unique

  """A common name for this `FunctionalExpressionRole`"""
  name: String

  """A brief description of this `FunctionalExpressionRole`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `FunctionalExpressionRole`
  """
  url: URI @unique

  """The `FunctionalExpression` that plays the role"""
  functionalExpression: FunctionalExpression! @playsRole

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfFunctionalExpressionRole!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `FunctionalExpressionRole`"""
  type: CodedConcept

  """
  Categories this `FunctionalExpressionRole` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `FunctionalExpressionRole`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `FunctionalExpressionRole`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """The most recent audit record for this `FunctionalExpressionRole`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `FunctionalExpressionRole`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `FunctionalExpressionRoles`"""
type FunctionalExpressionRoleConnection implements EntityConnection {
  """`FunctionalExpressionRole` nodes"""
  nodes: [FunctionalExpressionRole!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""
Filter, sort, paginate parameters for `FunctionalExpressionRoleConnections`
"""
input FunctionalExpressionRoleConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `FunctionalExpressionRoles`"""
  filter: FunctionalExpressionRoleFilter
}

"""A filter for `FunctionalExpressionRoles`"""
input FunctionalExpressionRoleFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `functionalExpression`"""
  functionalExpression: FunctionalExpressionFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of a `FunctionalExpressionRoleFilter`"""
  not: FunctionalExpressionRoleFilter

  """Disjunction of `FunctionalExpressionRoleFilters`"""
  or: [FunctionalExpressionRoleFilter!]

  """Conjunction of `FunctionalExpressionRoleFilters`"""
  and: [FunctionalExpressionRoleFilter!]
}

"""
The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
"""
scalar ID

"""
A unique identifier issued by an external system

All entities in the Medidata Sensor Cloud are associated with unique system identifiers. Many of these entities
have representations in other systems, external to the Medidata Sensor Cloud. `Identifiers` provide a way for the
Medidata Sensor Cloud to track those external entities and simplify collaboration with those external systems.
"""
type Identifier implements Entity & Auditable & PlaysRole & WithDataQualityValues & WithCategories & WithTags & WithTrackingEvents {
  """Permanent system identifier for this `Identifier`"""
  id: ID! @unique

  """A common name for this `Identifier`"""
  name: String

  """A brief description of this `Identifier`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `Identifier`
  """
  url: URI @unique

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfIdentifier!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `Identifier`"""
  type: CodedConcept

  """
  Categories this `Identifier` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `Identifier`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `Identifier`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """A connection to data quality values associated with this entity"""
  dataQualityValues(
    """Parameters to filter, sort, paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection!

  """The namespace of the identifier"""
  namespace: URI!

  """The unique value of the identifier"""
  value: String! @playsRole

  """Is this identifier a private key that must remain confidential"""
  isPrivate: Boolean

  """Organization that issued the identifier"""
  issuer: Organization

  """The algorithm used to generate the identifier"""
  algorithm: CodedConcept

  """The jurisdiction in which the identifier is applicable"""
  jurisdiction: CodedConcept

  """The most recent audit record for this `Identifier`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `Identifier`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `Identifiers`"""
type IdentifierConnection implements EntityConnection {
  """`Identifier` nodes"""
  nodes: [Identifier!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `IdentifierConnections`"""
input IdentifierConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `Identifiers`"""
  filter: IdentifierFilter
}

"""A filter for `Identifiers`"""
input IdentifierFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `dataQualityValues`"""
  dataQualityValues: DataQualityValueFilter

  """Filter for `namespace`"""
  namespace: URIFilter

  """Filter for `value`"""
  value: StringFilter

  """Filter for `isPrivate`"""
  isPrivate: BooleanFilter

  """Filter for `issuer`"""
  issuer: OrganizationFilter

  """Filter for `algorithm`"""
  algorithm: CodedConceptFilter

  """Filter for `jurisdiction`"""
  jurisdiction: CodedConceptFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of an `IdentifierFilter`"""
  not: IdentifierFilter

  """Disjunction of `IdentifierFilters`"""
  or: [IdentifierFilter!]

  """Conjunction of `IdentifierFilters`"""
  and: [IdentifierFilter!]
}

"""A filter for `IDS`"""
input IDFilter {
  """True if the value missing"""
  isNull: Boolean

  """If true, matches are case sensitive"""
  caseSensitive: Boolean

  """The value contains the specified string"""
  contains: String

  """The value starts with the specified string"""
  startsWith: String

  """The value ends with the specified string"""
  endsWith: String

  """The value matches the specified POSIX regular expression"""
  matchesRegex: String

  """The value equals the specified `ID`"""
  eq: ID

  """The value does not equal the specified `ID`"""
  ne: ID

  """The value is strictly less than the specified `ID`"""
  lt: ID

  """The value is less than or equal to the specified `ID`"""
  le: ID

  """The value is strictly greater than the specified `ID`"""
  gt: ID

  """The value is greater than or equal to the specified `ID`"""
  ge: ID

  """The value is a member of the specified `ID` list"""
  in: [ID!]

  """Negation of an `IDFilter`"""
  not: IDFilter

  """Disjunction of `IDFilters`"""
  or: [IDFilter!]

  """Conjunction of `IDFilters`"""
  and: [IDFilter!]
}

"""A photo or image associated with an entity"""
type Image implements Entity & Auditable & WithDataQualityValues & WithCategories & WithTags & WithTrackingEvents {
  """Permanent system identifier for this `Image`"""
  id: ID! @unique

  """A common name for this `Image`"""
  name: String

  """A brief description of this `Image`"""
  description: String

  """The network location of the image"""
  url: URI! @playsRole

  """A primary classification for this `Image`"""
  type: CodedConcept

  """Categories this `Image` embodies beyond its primary classified `type`"""
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `Image`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `Image`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """A connection to data quality values associated with this entity"""
  dataQualityValues(
    """Parameters to filter, sort, paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection!

  """The MIME type of the image"""
  mimeType: String

  """The most recent audit record for this `Image`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `Image`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `Images`"""
type ImageConnection implements EntityConnection {
  """`Image` nodes"""
  nodes: [Image!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `ImageConnections`"""
input ImageConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `Images`"""
  filter: ImageFilter
}

"""A filter for `Images`"""
input ImageFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `dataQualityValues`"""
  dataQualityValues: DataQualityValueFilter

  """Filter for `mimeType`"""
  mimeType: StringFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Negation of an `ImageFilter`"""
  not: ImageFilter

  """Disjunction of `ImageFilters`"""
  or: [ImageFilter!]

  """Conjunction of `ImageFilters`"""
  and: [ImageFilter!]
}

"""An `Image` playing a role in the context of another entity"""
type ImageRole implements Entity & Auditable & PlaysRole & WithCategories & WithTrackingEvents & WithTags {
  """Permanent system identifier for this `ImageRole`"""
  id: ID! @unique

  """A common name for this `ImageRole`"""
  name: String

  """A brief description of this `ImageRole`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `ImageRole`
  """
  url: URI @unique

  """The `Image` that plays the role"""
  image: Image! @playsRole

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfImageRole!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `ImageRole`"""
  type: CodedConcept

  """
  Categories this `ImageRole` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `ImageRole`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `ImageRole`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """The most recent audit record for this `ImageRole`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `ImageRole`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `ImageRoles`"""
type ImageRoleConnection implements EntityConnection {
  """`ImageRole` nodes"""
  nodes: [ImageRole!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `ImageRoleConnections`"""
input ImageRoleConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `ImageRoles`"""
  filter: ImageRoleFilter
}

"""A filter for `ImageRoles`"""
input ImageRoleFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `image`"""
  image: ImageFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of an `ImageRoleFilter`"""
  not: ImageRoleFilter

  """Disjunction of `ImageRoleFilters`"""
  or: [ImageRoleFilter!]

  """Conjunction of `ImageRoleFilters`"""
  and: [ImageRoleFilter!]
}

"""
Interface for definining the context entity for roles

Types that implement this interface must provide a field named `entity` which has a range
including the specific context types that can be associated with the role type.
"""
interface InContextOf {
  """
  Context entity field name
  
  This value indicates to which field in the context entity the association is directed.
  This is useful in circumstances where the context entity has multiple fields through
  which you can access the role type.
  """
  field: String!
}

"""
Context entity association with a `Category'

This type holds details of the context entity within which a `Category` role is played.
"""
type InContextOfCategory implements InContextOf {
  """The context entity associated with the `Category`"""
  entity: ContextTypesForCategory!

  """
  The field within the context entity that holds the association to the `Category`
  """
  field: String!
}

"""
Context entity association with a `ContactPoint'

This type holds details of the context entity within which a `ContactPoint` role is played.
"""
type InContextOfContactPoint implements InContextOf {
  """The context entity associated with the `ContactPoint`"""
  entity: ContextTypesForContactPoint!

  """
  The field within the context entity that holds the association to the `ContactPoint`
  """
  field: String!
}

"""
Context entity association with a `DataQualityMetricRole'

This type holds details of the context entity within which a `DataQualityMetricRole` role is played.
"""
type InContextOfDataQualityMetricRole implements InContextOf {
  """The context entity associated with the `DataQualityMetricRole`"""
  entity: SensorStudy!

  """
  The field within the context entity that holds the association to the `DataQualityMetricRole`
  """
  field: String!
}

"""
Context entity association with a `DataQualityValue'

This type holds details of the context entity within which a `DataQualityValue` role is played.
"""
type InContextOfDataQualityValue implements InContextOf {
  """The context entity associated with the `DataQualityValue`"""
  entity: ContextTypesForDataQualityValue!

  """
  The field within the context entity that holds the association to the `DataQualityValue`
  """
  field: String!
}

"""
Context entity association with a `DeliveryStream'

This type holds details of the context entity within which a `DeliveryStream` role is played.
"""
type InContextOfDeliveryStream implements InContextOf {
  """The context entity associated with the `DeliveryStream`"""
  entity: SensorStudy!

  """
  The field within the context entity that holds the association to the `DeliveryStream`
  """
  field: String!
}

"""
Context entity association with a `DeviceModelRole'

This type holds details of the context entity within which a `DeviceModelRole` role is played.
"""
type InContextOfDeviceModelRole implements InContextOf {
  """The context entity associated with the `DeviceModelRole`"""
  entity: DeviceModel!

  """
  The field within the context entity that holds the association to the `DeviceModelRole`
  """
  field: String!
}

"""
Context entity association with a `DeviceRole'

This type holds details of the context entity within which a `DeviceRole` role is played.
"""
type InContextOfDeviceRole implements InContextOf {
  """The context entity associated with the `DeviceRole`"""
  entity: ContextTypesForDeviceRole!

  """
  The field within the context entity that holds the association to the `DeviceRole`
  """
  field: String!
}

"""
A special input to filter the `inContextOf` field on types that implement the `PlaysRole` interface
"""
input InContextOfFilter {
  """Filter the context entity's ID"""
  id: ID!

  """Filter the context entity's type"""
  typeName: String!

  """Filter the context entity field of the association"""
  field: String!
}

"""
Context entity association with a `FunctionalExpressionRole'

This type holds details of the context entity within which a `FunctionalExpressionRole` role is played.
"""
type InContextOfFunctionalExpressionRole implements InContextOf {
  """The context entity associated with the `FunctionalExpressionRole`"""
  entity: DataQualityMetric!

  """
  The field within the context entity that holds the association to the `FunctionalExpressionRole`
  """
  field: String!
}

"""
Context entity association with an `Identifier'

This type holds details of the context entity within which an `Identifier` role is played.
"""
type InContextOfIdentifier implements InContextOf {
  """The context entity associated with the `Identifier`"""
  entity: ContextTypesForIdentifier!

  """
  The field within the context entity that holds the association to the `Identifier`
  """
  field: String!
}

"""
Context entity association with an `ImageRole'

This type holds details of the context entity within which an `ImageRole` role is played.
"""
type InContextOfImageRole implements InContextOf {
  """The context entity associated with the `ImageRole`"""
  entity: ContextTypesForImageRole!

  """
  The field within the context entity that holds the association to the `ImageRole`
  """
  field: String!
}

"""
Context entity association with a `LocationEvent'

This type holds details of the context entity within which a `LocationEvent` role is played.
"""
type InContextOfLocationEvent implements InContextOf {
  """The context entity associated with the `LocationEvent`"""
  entity: Device!

  """
  The field within the context entity that holds the association to the `LocationEvent`
  """
  field: String!
}

"""
Context entity association with a `LocationRole'

This type holds details of the context entity within which a `LocationRole` role is played.
"""
type InContextOfLocationRole implements InContextOf {
  """The context entity associated with the `LocationRole`"""
  entity: ContextTypesForLocationRole!

  """
  The field within the context entity that holds the association to the `LocationRole`
  """
  field: String!
}

"""
Context entity association with an `OrganizationRole'

This type holds details of the context entity within which an `OrganizationRole` role is played.
"""
type InContextOfOrganizationRole implements InContextOf {
  """The context entity associated with the `OrganizationRole`"""
  entity: ContextTypesForOrganizationRole!

  """
  The field within the context entity that holds the association to the `OrganizationRole`
  """
  field: String!
}

"""
Context entity association with a `PersonRole'

This type holds details of the context entity within which a `PersonRole` role is played.
"""
type InContextOfPersonRole implements InContextOf {
  """The context entity associated with the `PersonRole`"""
  entity: ContextTypesForPersonRole!

  """
  The field within the context entity that holds the association to the `PersonRole`
  """
  field: String!
}

"""
Context entity association with a `PostalAddressComponent'

This type holds details of the context entity within which a `PostalAddressComponent` role is played.
"""
type InContextOfPostalAddressComponent implements InContextOf {
  """The context entity associated with the `PostalAddressComponent`"""
  entity: PostalAddress!

  """
  The field within the context entity that holds the association to the `PostalAddressComponent`
  """
  field: String!
}

"""
Context entity association with a `SensorSubjectRole'

This type holds details of the context entity within which a `SensorSubjectRole` role is played.
"""
type InContextOfSensorSubjectRole implements InContextOf {
  """The context entity associated with the `SensorSubjectRole`"""
  entity: ContextTypesForSensorSubjectRole!

  """
  The field within the context entity that holds the association to the `SensorSubjectRole`
  """
  field: String!
}

"""
Context entity association with a `Tag'

This type holds details of the context entity within which a `Tag` role is played.
"""
type InContextOfTag implements InContextOf {
  """The context entity associated with the `Tag`"""
  entity: ContextTypesForTag!

  """
  The field within the context entity that holds the association to the `Tag`
  """
  field: String!
}

"""
Context entity association with a `Token'

This type holds details of the context entity within which a `Token` role is played.
"""
type InContextOfToken implements InContextOf {
  """The context entity associated with the `Token`"""
  entity: ContextTypesForToken!

  """
  The field within the context entity that holds the association to the `Token`
  """
  field: String!
}

"""
Context entity association with a `TrackingEvent'

This type holds details of the context entity within which a `TrackingEvent` role is played.
"""
type InContextOfTrackingEvent implements InContextOf {
  """The context entity associated with the `TrackingEvent`"""
  entity: ContextTypesForTrackingEvent!

  """
  The field within the context entity that holds the association to the `TrackingEvent`
  """
  field: String!
}

"""An interface for types that live in a library of related things"""
interface InLibrary {
  """The library this entity is a member of"""
  library: Library

  """The version of the entity"""
  version: String
}

"""
The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
"""
scalar Int

"""A filter for `Ints`"""
input IntFilter {
  """True if the value missing"""
  isNull: Boolean

  """The value equals the specified `Int`"""
  eq: Int

  """The value does not equal the specified `Int`"""
  ne: Int

  """The value is strictly less than the specified `Int`"""
  lt: Int

  """The value is less than or equal to the specified `Int`"""
  le: Int

  """The value is strictly greater than the specified `Int`"""
  gt: Int

  """The value is greater than or equal to the specified `Int`"""
  ge: Int

  """The value is a member of the specified `Int` list"""
  in: [Int!]

  """Negation of an `IntFilter`"""
  not: IntFilter

  """Disjunction of `IntFilters`"""
  or: [IntFilter!]

  """Conjunction of `IntFilters`"""
  and: [IntFilter!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""A filter for `JSONS`"""
input JSONFilter {
  """True if the value missing"""
  isNull: Boolean

  """If true, matches are case sensitive"""
  caseSensitive: Boolean

  """The value contains the specified string"""
  contains: String

  """The value starts with the specified string"""
  startsWith: String

  """The value ends with the specified string"""
  endsWith: String

  """The value matches the specified POSIX regular expression"""
  matchesRegex: String

  """The value equals the specified `String`"""
  eq: String

  """The value does not equal the specified `String`"""
  ne: String

  """The value is strictly less than the specified `String`"""
  lt: String

  """The value is less than or equal to the specified `String`"""
  le: String

  """The value is strictly greater than the specified `String`"""
  gt: String

  """The value is greater than or equal to the specified `String`"""
  ge: String

  """The value is a member of the specified `String` list"""
  in: [String!]

  """Negation of a `JSONFilter`"""
  not: JSONFilter

  """Disjunction of `JSONFilters`"""
  or: [JSONFilter!]

  """Conjunction of `JSONFilters`"""
  and: [JSONFilter!]
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

"""A filter for `JSONObjects`"""
input JSONObjectFilter {
  """True if the value missing"""
  isNull: Boolean

  """If true, matches are case sensitive"""
  caseSensitive: Boolean

  """The value contains the specified string"""
  contains: String

  """The value starts with the specified string"""
  startsWith: String

  """The value ends with the specified string"""
  endsWith: String

  """The value matches the specified POSIX regular expression"""
  matchesRegex: String

  """The value equals the specified `String`"""
  eq: String

  """The value does not equal the specified `String`"""
  ne: String

  """The value is strictly less than the specified `String`"""
  lt: String

  """The value is less than or equal to the specified `String`"""
  le: String

  """The value is strictly greater than the specified `String`"""
  gt: String

  """The value is greater than or equal to the specified `String`"""
  ge: String

  """The value is a member of the specified `String` list"""
  in: [String!]

  """Negation of a `JSONObjectFilter`"""
  not: JSONObjectFilter

  """Disjunction of `JSONObjectFilters`"""
  or: [JSONObjectFilter!]

  """Conjunction of `JSONObjectFilters`"""
  and: [JSONObjectFilter!]
}

"""
A virtual container for re-usable components

Any inherently re-usable entity, like a `DataQualityMetric` or a `FunctionalExpression`, that implements
the `InLibrary` interface can be associated with a `Library` to collect
related objects of use together under a given study or organization.
"""
type Library implements Entity & Auditable & WithCategories & WithDataQualityValues & WithTags & WithTrackingEvents {
  """Permanent system identifier for this `Library`"""
  id: ID! @unique

  """A common name for this `Library`"""
  name: String!

  """A brief description of this `Library`"""
  description: String!

  """
  A url pointing to a resource with more detailed information about this `Library`
  """
  url: URI @unique

  """A primary classification for this `Library`"""
  type: CodedConcept

  """
  Categories this `Library` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `Library`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `Library`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """A connection to data quality values associated with this entity"""
  dataQualityValues(
    """Parameters to filter, sort, paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection!

  """The organization that owns the library"""
  organization: Organization!

  """The study that owns the library"""
  study: SensorStudy

  """The most recent audit record for this `Library`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `Library`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `Libraries`"""
type LibraryConnection implements EntityConnection {
  """`Library` nodes"""
  nodes: [Library!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `LibraryConnections`"""
input LibraryConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `Libraries`"""
  filter: LibraryFilter
}

"""A filter for `Libraries`"""
input LibraryFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `dataQualityValues`"""
  dataQualityValues: DataQualityValueFilter

  """Filter for `organization`"""
  organization: OrganizationFilter

  """Filter for `study`"""
  study: SensorStudyFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Negation of a `LibraryFilter`"""
  not: LibraryFilter

  """Disjunction of `LibraryFilters`"""
  or: [LibraryFilter!]

  """Conjunction of `LibraryFilters`"""
  and: [LibraryFilter!]
}

"""Indicates the direction to navigate in connections"""
enum LimitDirection {
  """Return results before the cursor"""
  BACKWARD

  """Return results after the cursor"""
  FORWARD
}

"""A physical location on the surface of the earth"""
type Location implements Entity & Auditable & WithCategories & WithDataQualityValues & WithTags & WithTrackingEvents {
  """Permanent system identifier for this `Location`"""
  id: ID! @unique

  """A common name for this `Location`"""
  name: String

  """A brief description of this `Location`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `Location`
  """
  url: URI @unique

  """A primary classification for this `Location`"""
  type: CodedConcept

  """
  Categories this `Location` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `Location`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `Location`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """A connection to data quality values associated with this entity"""
  dataQualityValues(
    """Parameters to filter, sort, paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection!

  """A locale"""
  locale: CodedConcept

  """A physical postal address"""
  address: PostalAddress

  """Coordinates of the location serialized as GeoJSON"""
  geo: JSON

  """
  An offset from Universal Coordinate Time in minutes, associated with the location, at the specified or current time
  """
  utcOffset(asOf: DateTime): Int

  """The most recent audit record for this `Location`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `Location`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `Locations`"""
type LocationConnection implements EntityConnection {
  """`Location` nodes"""
  nodes: [Location!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `LocationConnections`"""
input LocationConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `Locations`"""
  filter: LocationFilter
}

"""An role for dynamically locating an entity in time and space"""
type LocationEvent implements Entity & Auditable & PlaysRole & WithCategories & WithTags & WithTrackingEvents @event {
  """Permanent system identifier for this `LocationEvent`"""
  id: ID! @unique

  """A common name for this `LocationEvent`"""
  name: String

  """A brief description of this `LocationEvent`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `LocationEvent`
  """
  url: URI @unique

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfLocationEvent!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `LocationEvent`"""
  type: CodedConcept

  """
  Categories this `LocationEvent` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `LocationEvent`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `LocationEvent`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """A location associated with the entity"""
  location: Location! @playsRole

  """The most recent audit record for this `LocationEvent`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `LocationEvent`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `LocationEvents`"""
type LocationEventConnection implements EntityConnection {
  """`LocationEvent` nodes"""
  nodes: [LocationEvent!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `LocationEventConnections`"""
input LocationEventConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `LocationEvents`"""
  filter: LocationEventFilter
}

"""A filter for `LocationEvents`"""
input LocationEventFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `location`"""
  location: LocationFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of a `LocationEventFilter`"""
  not: LocationEventFilter

  """Disjunction of `LocationEventFilters`"""
  or: [LocationEventFilter!]

  """Conjunction of `LocationEventFilters`"""
  and: [LocationEventFilter!]
}

"""A filter for `Locations`"""
input LocationFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `dataQualityValues`"""
  dataQualityValues: DataQualityValueFilter

  """Filter for `locale`"""
  locale: CodedConceptFilter

  """Filter for `address`"""
  address: PostalAddressFilter

  """Filter for `geo`"""
  geo: JSONFilter

  """Filter for `utcOffset`"""
  utcOffset: IntFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Negation of a `LocationFilter`"""
  not: LocationFilter

  """Disjunction of `LocationFilters`"""
  or: [LocationFilter!]

  """Conjunction of `LocationFilters`"""
  and: [LocationFilter!]
}

"""A `Location` playing a role in the context of another entity"""
type LocationRole implements Entity & Auditable & PlaysRole & WithCategories & WithTrackingEvents & WithTags {
  """Permanent system identifier for this `LocationRole`"""
  id: ID! @unique

  """A common name for this `LocationRole`"""
  name: String

  """A brief description of this `LocationRole`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `LocationRole`
  """
  url: URI @unique

  """The `Location` that plays the role"""
  location: Location! @playsRole

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfLocationRole!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `LocationRole`"""
  type: CodedConcept

  """
  Categories this `LocationRole` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `LocationRole`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `LocationRole`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """The most recent audit record for this `LocationRole`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `LocationRole`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `LocationRoles`"""
type LocationRoleConnection implements EntityConnection {
  """`LocationRole` nodes"""
  nodes: [LocationRole!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `LocationRoleConnections`"""
input LocationRoleConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `LocationRoles`"""
  filter: LocationRoleFilter
}

"""A filter for `LocationRoles`"""
input LocationRoleFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `location`"""
  location: LocationFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of a `LocationRoleFilter`"""
  not: LocationRoleFilter

  """Disjunction of `LocationRoleFilters`"""
  or: [LocationRoleFilter!]

  """Conjunction of `LocationRoleFilters`"""
  and: [LocationRoleFilter!]
}

"""Write API"""
type Mutation {
  """Delete an entity"""
  deleteEntity(
    """ID of the entity to delete"""
    id: ID!

    """Reason for deletion"""
    reason: TranslatedTextInput!
  ): ID!

  """Create a `Category`"""
  createCategory(
    """Create parameters"""
    input: CreateCategoryInput!

    """Reason for creating the `Category`"""
    reason: TranslatedTextInput!
  ): Category

  """Create a `ClientApp`"""
  createClientApp(
    """Create parameters"""
    input: CreateClientAppInput!

    """Reason for creating the `ClientApp`"""
    reason: TranslatedTextInput!
  ): ClientApp

  """Create a `CodedConcept`"""
  createCodedConcept(
    """Create parameters"""
    input: CreateCodedConceptInput!

    """Reason for creating the `CodedConcept`"""
    reason: TranslatedTextInput!
  ): CodedConcept

  """Create a `ContactPoint`"""
  createContactPoint(
    """Create parameters"""
    input: CreateContactPointInput!

    """Reason for creating the `ContactPoint`"""
    reason: TranslatedTextInput!
  ): ContactPoint

  """Create a `DataQualityMetric`"""
  createDataQualityMetric(
    """Create parameters"""
    input: CreateDataQualityMetricInput!

    """Reason for creating the `DataQualityMetric`"""
    reason: TranslatedTextInput!
  ): DataQualityMetric

  """Create a `DataQualityMetricRole`"""
  createDataQualityMetricRole(
    """Create parameters"""
    input: CreateDataQualityMetricRoleInput!

    """Reason for creating the `DataQualityMetricRole`"""
    reason: TranslatedTextInput!
  ): DataQualityMetricRole

  """Create a `DeliveryStream`"""
  createDeliveryStream(
    """Create parameters"""
    input: CreateDeliveryStreamInput!

    """Reason for creating the `DeliveryStream`"""
    reason: TranslatedTextInput!
  ): DeliveryStream

  """Create a `Device`"""
  createDevice(
    """Create parameters"""
    input: CreateDeviceInput!

    """Reason for creating the `Device`"""
    reason: TranslatedTextInput!
  ): Device

  """Create a `DeviceRole`"""
  createDeviceRole(
    """Create parameters"""
    input: CreateDeviceRoleInput!

    """Reason for creating the `DeviceRole`"""
    reason: TranslatedTextInput!
  ): DeviceRole

  """Create a `DeviceModel`"""
  createDeviceModel(
    """Create parameters"""
    input: CreateDeviceModelInput!

    """Reason for creating the `DeviceModel`"""
    reason: TranslatedTextInput!
  ): DeviceModel

  """Create a `DeviceModelRole`"""
  createDeviceModelRole(
    """Create parameters"""
    input: CreateDeviceModelRoleInput!

    """Reason for creating the `DeviceModelRole`"""
    reason: TranslatedTextInput!
  ): DeviceModelRole

  """Create a `FunctionalExpression`"""
  createFunctionalExpression(
    """Create parameters"""
    input: CreateFunctionalExpressionInput!

    """Reason for creating the `FunctionalExpression`"""
    reason: TranslatedTextInput!
  ): FunctionalExpression

  """Create a `FunctionalExpressionRole`"""
  createFunctionalExpressionRole(
    """Create parameters"""
    input: CreateFunctionalExpressionRoleInput!

    """Reason for creating the `FunctionalExpressionRole`"""
    reason: TranslatedTextInput!
  ): FunctionalExpressionRole

  """Create an `Identifier`"""
  createIdentifier(
    """Create parameters"""
    input: CreateIdentifierInput!

    """Reason for creating the `Identifier`"""
    reason: TranslatedTextInput!
  ): Identifier

  """Create an `Image`"""
  createImage(
    """Create parameters"""
    input: CreateImageInput!

    """Reason for creating the `Image`"""
    reason: TranslatedTextInput!
  ): Image

  """Create an `ImageRole`"""
  createImageRole(
    """Create parameters"""
    input: CreateImageRoleInput!

    """Reason for creating the `ImageRole`"""
    reason: TranslatedTextInput!
  ): ImageRole

  """Create a `Library`"""
  createLibrary(
    """Create parameters"""
    input: CreateLibraryInput!

    """Reason for creating the `Library`"""
    reason: TranslatedTextInput!
  ): Library

  """Create a `Location`"""
  createLocation(
    """Create parameters"""
    input: CreateLocationInput!

    """Reason for creating the `Location`"""
    reason: TranslatedTextInput!
  ): Location

  """Create a `LocationRole`"""
  createLocationRole(
    """Create parameters"""
    input: CreateLocationRoleInput!

    """Reason for creating the `LocationRole`"""
    reason: TranslatedTextInput!
  ): LocationRole

  """Create a `LocationEvent`"""
  createLocationEvent(
    """Create parameters"""
    input: CreateLocationEventInput!

    """Reason for creating the `LocationEvent`"""
    reason: TranslatedTextInput!
  ): LocationEvent

  """Create an `Observation`"""
  createObservation(
    """Create parameters"""
    input: CreateObservationInput!

    """Reason for creating the `Observation`"""
    reason: TranslatedTextInput!
  ): Observation

  """Create an `Organization`"""
  createOrganization(
    """Create parameters"""
    input: CreateOrganizationInput!

    """Reason for creating the `Organization`"""
    reason: TranslatedTextInput!
  ): Organization

  """Create an `OrganizationRole`"""
  createOrganizationRole(
    """Create parameters"""
    input: CreateOrganizationRoleInput!

    """Reason for creating the `OrganizationRole`"""
    reason: TranslatedTextInput!
  ): OrganizationRole

  """Create a `Person`"""
  createPerson(
    """Create parameters"""
    input: CreatePersonInput!

    """Reason for creating the `Person`"""
    reason: TranslatedTextInput!
  ): Person

  """Create a `PersonRole`"""
  createPersonRole(
    """Create parameters"""
    input: CreatePersonRoleInput!

    """Reason for creating the `PersonRole`"""
    reason: TranslatedTextInput!
  ): PersonRole

  """Create a `PostalAddress`"""
  createPostalAddress(
    """Create parameters"""
    input: CreatePostalAddressInput!

    """Reason for creating the `PostalAddress`"""
    reason: TranslatedTextInput!
  ): PostalAddress

  """Create a `PostalAddressComponent`"""
  createPostalAddressComponent(
    """Create parameters"""
    input: CreatePostalAddressComponentInput!

    """Reason for creating the `PostalAddressComponent`"""
    reason: TranslatedTextInput!
  ): PostalAddressComponent

  """Create a `SensorStudy`"""
  createSensorStudy(
    """Create parameters"""
    input: CreateSensorStudyInput!

    """Reason for creating the `SensorStudy`"""
    reason: TranslatedTextInput!
  ): SensorStudy

  """Create a `SensorSubject`"""
  createSensorSubject(
    """Create parameters"""
    input: CreateSensorSubjectInput!

    """Reason for creating the `SensorSubject`"""
    reason: TranslatedTextInput!
  ): SensorSubject

  """Create a `SensorSubjectRole`"""
  createSensorSubjectRole(
    """Create parameters"""
    input: CreateSensorSubjectRoleInput!

    """Reason for creating the `SensorSubjectRole`"""
    reason: TranslatedTextInput!
  ): SensorSubjectRole

  """Create a `Tag`"""
  createTag(
    """Create parameters"""
    input: CreateTagInput!

    """Reason for creating the `Tag`"""
    reason: TranslatedTextInput!
  ): Tag

  """Create a `Token`"""
  createToken(
    """Create parameters"""
    input: CreateTokenInput!

    """Reason for creating the `Token`"""
    reason: TranslatedTextInput!
  ): Token

  """Create a `TrackingEvent`"""
  createTrackingEvent(
    """Create parameters"""
    input: CreateTrackingEventInput!

    """Reason for creating the `TrackingEvent`"""
    reason: TranslatedTextInput!
  ): TrackingEvent

  """Create a `Vocabulary`"""
  createVocabulary(
    """Create parameters"""
    input: CreateVocabularyInput!

    """Reason for creating the `Vocabulary`"""
    reason: TranslatedTextInput!
  ): Vocabulary

  """Update a `Category`"""
  updateCategory(
    """Update parameters"""
    input: UpdateCategoryInput!

    """Reason for updating the `Category`"""
    reason: TranslatedTextInput!
  ): Category

  """Update a `ClientApp`"""
  updateClientApp(
    """Update parameters"""
    input: UpdateClientAppInput!

    """Reason for updating the `ClientApp`"""
    reason: TranslatedTextInput!
  ): ClientApp

  """Update a `CodedConcept`"""
  updateCodedConcept(
    """Update parameters"""
    input: UpdateCodedConceptInput!

    """Reason for updating the `CodedConcept`"""
    reason: TranslatedTextInput!
  ): CodedConcept

  """Update a `ContactPoint`"""
  updateContactPoint(
    """Update parameters"""
    input: UpdateContactPointInput!

    """Reason for updating the `ContactPoint`"""
    reason: TranslatedTextInput!
  ): ContactPoint

  """Update a `DataQualityMetric`"""
  updateDataQualityMetric(
    """Update parameters"""
    input: UpdateDataQualityMetricInput!

    """Reason for updating the `DataQualityMetric`"""
    reason: TranslatedTextInput!
  ): DataQualityMetric

  """Update a `DataQualityMetricRole`"""
  updateDataQualityMetricRole(
    """Update parameters"""
    input: UpdateDataQualityMetricRoleInput!

    """Reason for updating the `DataQualityMetricRole`"""
    reason: TranslatedTextInput!
  ): DataQualityMetricRole

  """Update a `DeliveryStream`"""
  updateDeliveryStream(
    """Update parameters"""
    input: UpdateDeliveryStreamInput!

    """Reason for updating the `DeliveryStream`"""
    reason: TranslatedTextInput!
  ): DeliveryStream

  """Update a `Device`"""
  updateDevice(
    """Update parameters"""
    input: UpdateDeviceInput!

    """Reason for updating the `Device`"""
    reason: TranslatedTextInput!
  ): Device

  """Update a `DeviceRole`"""
  updateDeviceRole(
    """Update parameters"""
    input: UpdateDeviceRoleInput!

    """Reason for updating the `DeviceRole`"""
    reason: TranslatedTextInput!
  ): DeviceRole

  """Update a `DeviceModel`"""
  updateDeviceModel(
    """Update parameters"""
    input: UpdateDeviceModelInput!

    """Reason for updating the `DeviceModel`"""
    reason: TranslatedTextInput!
  ): DeviceModel

  """Update a `DeviceModelRole`"""
  updateDeviceModelRole(
    """Update parameters"""
    input: UpdateDeviceModelRoleInput!

    """Reason for updating the `DeviceModelRole`"""
    reason: TranslatedTextInput!
  ): DeviceModelRole

  """Update a `FunctionalExpression`"""
  updateFunctionalExpression(
    """Update parameters"""
    input: UpdateFunctionalExpressionInput!

    """Reason for updating the `FunctionalExpression`"""
    reason: TranslatedTextInput!
  ): FunctionalExpression

  """Update a `FunctionalExpressionRole`"""
  updateFunctionalExpressionRole(
    """Update parameters"""
    input: UpdateFunctionalExpressionRoleInput!

    """Reason for updating the `FunctionalExpressionRole`"""
    reason: TranslatedTextInput!
  ): FunctionalExpressionRole

  """Update an `Identifier`"""
  updateIdentifier(
    """Update parameters"""
    input: UpdateIdentifierInput!

    """Reason for updating the `Identifier`"""
    reason: TranslatedTextInput!
  ): Identifier

  """Update an `Image`"""
  updateImage(
    """Update parameters"""
    input: UpdateImageInput!

    """Reason for updating the `Image`"""
    reason: TranslatedTextInput!
  ): Image

  """Update an `ImageRole`"""
  updateImageRole(
    """Update parameters"""
    input: UpdateImageRoleInput!

    """Reason for updating the `ImageRole`"""
    reason: TranslatedTextInput!
  ): ImageRole

  """Update a `Library`"""
  updateLibrary(
    """Update parameters"""
    input: UpdateLibraryInput!

    """Reason for updating the `Library`"""
    reason: TranslatedTextInput!
  ): Library

  """Update a `Location`"""
  updateLocation(
    """Update parameters"""
    input: UpdateLocationInput!

    """Reason for updating the `Location`"""
    reason: TranslatedTextInput!
  ): Location

  """Update a `LocationRole`"""
  updateLocationRole(
    """Update parameters"""
    input: UpdateLocationRoleInput!

    """Reason for updating the `LocationRole`"""
    reason: TranslatedTextInput!
  ): LocationRole

  """Update a `LocationEvent`"""
  updateLocationEvent(
    """Update parameters"""
    input: UpdateLocationEventInput!

    """Reason for updating the `LocationEvent`"""
    reason: TranslatedTextInput!
  ): LocationEvent

  """Update an `Organization`"""
  updateOrganization(
    """Update parameters"""
    input: UpdateOrganizationInput!

    """Reason for updating the `Organization`"""
    reason: TranslatedTextInput!
  ): Organization

  """Update an `OrganizationRole`"""
  updateOrganizationRole(
    """Update parameters"""
    input: UpdateOrganizationRoleInput!

    """Reason for updating the `OrganizationRole`"""
    reason: TranslatedTextInput!
  ): OrganizationRole

  """Update a `Person`"""
  updatePerson(
    """Update parameters"""
    input: UpdatePersonInput!

    """Reason for updating the `Person`"""
    reason: TranslatedTextInput!
  ): Person

  """Update a `PersonRole`"""
  updatePersonRole(
    """Update parameters"""
    input: UpdatePersonRoleInput!

    """Reason for updating the `PersonRole`"""
    reason: TranslatedTextInput!
  ): PersonRole

  """Update a `PostalAddress`"""
  updatePostalAddress(
    """Update parameters"""
    input: UpdatePostalAddressInput!

    """Reason for updating the `PostalAddress`"""
    reason: TranslatedTextInput!
  ): PostalAddress

  """Update a `PostalAddressComponent`"""
  updatePostalAddressComponent(
    """Update parameters"""
    input: UpdatePostalAddressComponentInput!

    """Reason for updating the `PostalAddressComponent`"""
    reason: TranslatedTextInput!
  ): PostalAddressComponent

  """Update a `SensorStudy`"""
  updateSensorStudy(
    """Update parameters"""
    input: UpdateSensorStudyInput!

    """Reason for updating the `SensorStudy`"""
    reason: TranslatedTextInput!
  ): SensorStudy

  """Update a `SensorSubject`"""
  updateSensorSubject(
    """Update parameters"""
    input: UpdateSensorSubjectInput!

    """Reason for updating the `SensorSubject`"""
    reason: TranslatedTextInput!
  ): SensorSubject

  """Update a `SensorSubjectRole`"""
  updateSensorSubjectRole(
    """Update parameters"""
    input: UpdateSensorSubjectRoleInput!

    """Reason for updating the `SensorSubjectRole`"""
    reason: TranslatedTextInput!
  ): SensorSubjectRole

  """Update a `Tag`"""
  updateTag(
    """Update parameters"""
    input: UpdateTagInput!

    """Reason for updating the `Tag`"""
    reason: TranslatedTextInput!
  ): Tag

  """Update a `Token`"""
  updateToken(
    """Update parameters"""
    input: UpdateTokenInput!

    """Reason for updating the `Token`"""
    reason: TranslatedTextInput!
  ): Token

  """Update a `TrackingEvent`"""
  updateTrackingEvent(
    """Update parameters"""
    input: UpdateTrackingEventInput!

    """Reason for updating the `TrackingEvent`"""
    reason: TranslatedTextInput!
  ): TrackingEvent

  """Update a `Vocabulary`"""
  updateVocabulary(
    """Update parameters"""
    input: UpdateVocabularyInput!

    """Reason for updating the `Vocabulary`"""
    reason: TranslatedTextInput!
  ): Vocabulary
}

"""
A raw or aggregate measurement of a property of interest from a biometric sensor

Each `Observation` represents a measurement, taken by a biometric sensor worn by
a subject in a particular clinical study, in accordance with a prescribed
procedure, at or over a particular time or time period, of some interesting raw
or aggregate observable property, like *systolic blood pressure*. The property
being measured can be found in the `property` field. The measurement itself is in
the `quantity` field, representing a numeric value and unit of measurement. In
rare instances, the property being measured is qualitative and the result is
represented in the `codedValue` field.
"""
type Observation implements Entity & Auditable & WithDataQualityValues & WithCategories & WithTags & WithTrackingEvents @resolve(with: "CASSANDRA", config: "{\n  partitionColumns: [\n    subject\n  ]\n  clusteringColumns: [\n    resultTime DESC\n    id DESC\n  ]\n  buckets: [\n    day\n    hour\n    minute\n    second\n    decisecond\n    centisecond\n    millisecond\n  ]\n}") @immutable {
  """Permanent system identifier for this `Observation`"""
  id: ID! @unique

  """A common name for this `Observation`"""
  name: String! @resolve(with: "VIRTUAL")

  """A brief description of this `Observation`"""
  description: String! @resolve(with: "VIRTUAL")

  """
  A url pointing to a resource with more detailed information about this `Observation`
  """
  url: URI! @resolve(with: "VIRTUAL")

  """A primary classification for this `Observation`"""
  type: CodedConcept! @resolve(with: "VIRTUAL")

  """
  Categories this `Observation` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `Observation`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `Observation`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """A connection to data quality values associated with this entity"""
  dataQualityValues(
    """Parameters to filter, sort, paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection!

  """The specific property being observed (aka, diastolic blood pressure)"""
  property: CodedConceptCurie!

  """The period over which the phenomenon was measured"""
  phenomenonTime: Period!

  """
  Partial Observation
  
  If the duration of the phenomenon time interval is less than the expected duration of
  a measurement of this property type, then the observation is considered *partial*.
  """
  isPartial: Boolean! @readonly

  """The time the observation was produced by the sensor (in milliseconds)"""
  resultTime: DateTime!

  """
  Nanosecond adjustment to result time, if necessary
  
  Result time is stored in milliseconds. If a sensor reading is measured at a
  finer granularity, you may store the nanosecond adjustment here, such that the
  nanosecond precision result time can be computed as
  `resultTime * 10^6 + resultNanos`.
  """
  resultNanos: Int

  """The time the observation was received by the platform"""
  processedTime: DateTime!

  """The study associated with the subject"""
  study: SensorStudy!

  """The site associated with the subject, if any"""
  site: Organization

  """The subject of the observation"""
  subject: SensorSubject!

  """The device kit from which the observation originated"""
  device: Device

  """
  The specific sensor device performing the observation
  
  For some observations which are aggregated from multiple
  sensor readings this field will be missing. In this case,
  you can access the top level device kit associated with
  the subject via the `device` field.
  """
  sensor: Device

  """The coded value of the observation, if non-numeric"""
  codedValue: CodedConceptCurie

  """The measured quantity of the observed property"""
  result: Quantity

  """The most recent audit record for this `Observation`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `Observation`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `Observations`"""
type ObservationConnection implements EntityConnection {
  """`Observation` nodes"""
  nodes: [Observation!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `ObservationConnections`"""
input ObservationConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `Observations`"""
  filter: ObservationFilter
}

"""A filter for `Observations`"""
input ObservationFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Negation of an `ObservationFilter`"""
  not: ObservationFilter

  """Disjunction of `ObservationFilters`"""
  or: [ObservationFilter!]

  """Conjunction of `ObservationFilters`"""
  and: [ObservationFilter!]
}

"""
An input pointing at an individual `Observation` instance for a subject.

While the `eventID` of the observation is unique, the `subjectID`
and the `resultTime` are required because observation storage is partitioned
by subject id and clustered by result time.
"""
input ObservationKey {
  """The subject associated with the Observation"""
  subjectID: ID!

  """The result time associated with the Observation"""
  resultTime: DateTime!

  """The individual observation event identifier"""
  eventID: ID!
}

"""Specify a field by which to order connection results"""
input OrderBy {
  """The name of the field to order by"""
  field: String!

  """If true, sort this field in descending order (defaults to `false`)"""
  desc: Boolean
}

"""A collection of people that have come together to achieve an objective"""
type Organization implements Entity & Auditable & WithCategories & WithImages & WithContacts & WithDataQualityValues & WithIdentifiers & WithLocations & WithTags & WithTokens & WithTrackingEvents {
  """Permanent system identifier for this `Organization`"""
  id: ID! @unique

  """A common name for this `Organization`"""
  name: String

  """A brief description of this `Organization`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `Organization`
  """
  url: URI @unique

  """A connection to any other identifiers for this `Organization`"""
  identifiers(
    """Parameters to filter, sort, paginate the connection"""
    input: IdentifierConnectionInput
  ): IdentifierConnection!

  """A primary classification for this `Organization`"""
  type: CodedConcept

  """
  Categories this `Organization` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `Organization`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `Organization`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """Primary email address"""
  primaryEmail: ContactPoint @resolve(with: "CONNECTION_SUBSET", config: "{\n  connection: contactPoints\n  input: {\n    limit: 1\n    filter: {\n      and: [\n        {\n          isPrimary: {is: true}\n        },\n        {\n          type: {\n            curie: {eq: 'msc:contact-point/type/email'}\n          }\n        }\n      ]\n    }\n  }\n}")

  """Primary phone number"""
  primaryPhone: ContactPoint @resolve(with: "CONNECTION_SUBSET", config: "{\n  connection: contactPoints\n  input: {\n    limit: 1\n    filter: {\n      and: [\n        {\n          isPrimary: {is: true}\n        },\n        {\n          type: {\n            curie: {eq: 'msc:contact-point/type/phone'}\n          }\n        }\n      ]\n    }\n  }\n}")

  """A connection to query the contact points for this `Organization`"""
  contactPoints(
    """Parameters to filter, sort, paginate the connection"""
    input: ContactPointConnectionInput
  ): ContactPointConnection!

  """A connection to data quality values associated with this entity"""
  dataQualityValues(
    """Parameters to filter, sort, paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection!

  """A connection to query the images for this `Organization`"""
  images(
    """Parameters to filter, sort, paginate the connection"""
    input: ImageRoleConnectionInput
  ): ImageRoleConnection!

  """A connection to query locations associated with this `Organization`"""
  locations(
    """Parameters to filter, sort, paginate the connection"""
    input: LocationRoleConnectionInput
  ): LocationRoleConnection!

  """The connection of tokens associated with an agent"""
  tokens(
    """Parameters to filter, sort, paginate the connection"""
    input: TokenConnectionInput
  ): TokenConnection!

  """The parent organization of this `Organization`"""
  superOrganization: OrganizationRole @resolve(with: "CONNECTION_HIER_PARENT")

  """A connection to sub-organizations within this `Organization`"""
  subOrganizations(input: OrganizationRoleConnectionInput): OrganizationRoleConnection!

  """A connection to people associated with this `Organization`"""
  members(input: PersonRoleConnectionInput): PersonRoleConnection!

  """A connection to devices assigned to this organization"""
  devices(input: DeviceRoleConnectionInput): DeviceRoleConnection!

  """The most recent audit record for this `Organization`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `Organization`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `Organizations`"""
type OrganizationConnection implements EntityConnection {
  """`Organization` nodes"""
  nodes: [Organization!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `OrganizationConnections`"""
input OrganizationConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `Organizations`"""
  filter: OrganizationFilter
}

"""A filter for `Organizations`"""
input OrganizationFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `identifiers`"""
  identifiers: IdentifierFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `contactPoints`"""
  contactPoints: ContactPointFilter

  """Filter for `dataQualityValues`"""
  dataQualityValues: DataQualityValueFilter

  """Filter for `images`"""
  images: ImageRoleFilter

  """Filter for `locations`"""
  locations: LocationRoleFilter

  """Filter for `tokens`"""
  tokens: TokenFilter

  """Filter for `subOrganizations`"""
  subOrganizations: OrganizationRoleFilter

  """Filter for `members`"""
  members: PersonRoleFilter

  """Filter for `devices`"""
  devices: DeviceRoleFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Negation of an `OrganizationFilter`"""
  not: OrganizationFilter

  """Disjunction of `OrganizationFilters`"""
  or: [OrganizationFilter!]

  """Conjunction of `OrganizationFilters`"""
  and: [OrganizationFilter!]
}

"""An `Organization` playing a role in the context of another entity"""
type OrganizationRole implements Entity & Auditable & PlaysRole & WithCategories & WithTrackingEvents & WithTags {
  """Permanent system identifier for this `OrganizationRole`"""
  id: ID! @unique

  """A common name for this `OrganizationRole`"""
  name: String

  """A brief description of this `OrganizationRole`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `OrganizationRole`
  """
  url: URI @unique

  """The `Organization` that plays the role"""
  organization: Organization! @playsRole

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfOrganizationRole!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `OrganizationRole`"""
  type: CodedConcept

  """
  Categories this `OrganizationRole` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `OrganizationRole`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `OrganizationRole`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """The most recent audit record for this `OrganizationRole`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `OrganizationRole`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `OrganizationRoles`"""
type OrganizationRoleConnection implements EntityConnection {
  """`OrganizationRole` nodes"""
  nodes: [OrganizationRole!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `OrganizationRoleConnections`"""
input OrganizationRoleConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `OrganizationRoles`"""
  filter: OrganizationRoleFilter
}

"""A filter for `OrganizationRoles`"""
input OrganizationRoleFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `organization`"""
  organization: OrganizationFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of an `OrganizationRoleFilter`"""
  not: OrganizationRoleFilter

  """Disjunction of `OrganizationRoleFilters`"""
  or: [OrganizationRoleFilter!]

  """Conjunction of `OrganizationRoleFilters`"""
  and: [OrganizationRoleFilter!]
}

"""Information about the current page of results in a connection"""
type PageInfo {
  """Cursors associated with each item in connection"""
  cursors: [ID!]

  """True if connection has a previous page"""
  hasPreviousPage: Boolean!

  """True if connection has a next page"""
  hasNextPage: Boolean!
}

"""A time period defined by start and end datetimes"""
type Period {
  """Starting time with inclusive boundary"""
  start: DateTime!

  """End time with inclusive boundary, if not ongoing"""
  end: DateTime

  """
  Returns true if the specified datetime lies within the period. If no `asOf` time is specified, returns
  true if the period is currently active
  """
  isActive(asOf: DateTime): Boolean @resolve(with: "VIRTUAL")

  """The duration of the period"""
  duration: Duration @resolve(with: "VIRTUAL")
}

"""A filter for `Periods`"""
input PeriodFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `start`"""
  start: DateTimeFilter

  """Filter for `end`"""
  end: DateTimeFilter

  """Negation of a `PeriodFilter`"""
  not: PeriodFilter

  """Disjunction of `PeriodFilters`"""
  or: [PeriodFilter!]

  """Conjunction of `PeriodFilters`"""
  and: [PeriodFilter!]
}

"""An input for `Periods`"""
input PeriodInput {
  """Set field `start`"""
  start: DateTime!

  """Set field `end`"""
  end: DateTime

  """Set field `isActive`"""
  isActive: Boolean

  """Set field `duration`"""
  duration: Duration
}

"""A human person, alive or dead"""
type Person implements Entity & Auditable & WithCategories & WithImages & WithContacts & WithDataQualityValues & WithIdentifiers & WithLocations & WithTags & WithTokens & WithTrackingEvents {
  """Permanent system identifier for this `Person`"""
  id: ID! @unique

  """Full name of the person"""
  name: String!

  """A brief description of this `Person`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `Person`
  """
  url: URI @unique

  """A connection to any other identifiers for this `Person`"""
  identifiers(
    """Parameters to filter, sort, paginate the connection"""
    input: IdentifierConnectionInput
  ): IdentifierConnection!

  """A primary classification for this `Person`"""
  type: CodedConcept

  """Categories this `Person` embodies beyond its primary classified `type`"""
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `Person`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `Person`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """Primary email address"""
  primaryEmail: ContactPoint @resolve(with: "CONNECTION_SUBSET", config: "{\n  connection: contactPoints\n  input: {\n    limit: 1\n    filter: {\n      and: [\n        {\n          isPrimary: {is: true}\n        },\n        {\n          type: {\n            curie: {eq: 'msc:contact-point/type/email'}\n          }\n        }\n      ]\n    }\n  }\n}")

  """Primary phone number"""
  primaryPhone: ContactPoint @resolve(with: "CONNECTION_SUBSET", config: "{\n  connection: contactPoints\n  input: {\n    limit: 1\n    filter: {\n      and: [\n        {\n          isPrimary: {is: true}\n        },\n        {\n          type: {\n            curie: {eq: 'msc:contact-point/type/phone'}\n          }\n        }\n      ]\n    }\n  }\n}")

  """A connection to query the contact points for this `Person`"""
  contactPoints(
    """Parameters to filter, sort, paginate the connection"""
    input: ContactPointConnectionInput
  ): ContactPointConnection!

  """A connection to data quality values associated with this entity"""
  dataQualityValues(
    """Parameters to filter, sort, paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection!

  """A connection to query the images for this `Person`"""
  images(
    """Parameters to filter, sort, paginate the connection"""
    input: ImageRoleConnectionInput
  ): ImageRoleConnection!

  """A connection to query locations associated with this `Person`"""
  locations(
    """Parameters to filter, sort, paginate the connection"""
    input: LocationRoleConnectionInput
  ): LocationRoleConnection!

  """The connection of tokens associated with an agent"""
  tokens(
    """Parameters to filter, sort, paginate the connection"""
    input: TokenConnectionInput
  ): TokenConnection!

  """A preferred nickname for the person"""
  nickname: String

  """
  The age of the person in the requested UCUM time unit (`a`, years, by default)
  """
  age(unit: String = "a"): Int

  """The date the person was born"""
  dob: Date

  """The gender of the person"""
  gender: CodedConcept

  """
  The height of a person, in the UCUM distance unit specified (`cm` by default)
  """
  height(unit: String = "cm"): Float

  """
  The weight of a person, in the UCUM mass unit specified (`kg` by default)
  """
  weight(unit: String = "kg"): Float

  """The most recent audit record for this `Person`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `Person`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `Persons`"""
type PersonConnection implements EntityConnection {
  """`Person` nodes"""
  nodes: [Person!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `PersonConnections`"""
input PersonConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `Persons`"""
  filter: PersonFilter
}

"""A filter for `Persons`"""
input PersonFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `identifiers`"""
  identifiers: IdentifierFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `contactPoints`"""
  contactPoints: ContactPointFilter

  """Filter for `dataQualityValues`"""
  dataQualityValues: DataQualityValueFilter

  """Filter for `images`"""
  images: ImageRoleFilter

  """Filter for `locations`"""
  locations: LocationRoleFilter

  """Filter for `tokens`"""
  tokens: TokenFilter

  """Filter for `nickname`"""
  nickname: StringFilter

  """Filter for `age`"""
  age: IntFilter

  """Filter for `dob`"""
  dob: DateFilter

  """Filter for `gender`"""
  gender: CodedConceptFilter

  """Filter for `height`"""
  height: FloatFilter

  """Filter for `weight`"""
  weight: FloatFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Negation of a `PersonFilter`"""
  not: PersonFilter

  """Disjunction of `PersonFilters`"""
  or: [PersonFilter!]

  """Conjunction of `PersonFilters`"""
  and: [PersonFilter!]
}

"""A `Person` playing a role in the context of another entity"""
type PersonRole implements Entity & Auditable & PlaysRole & WithCategories & WithTrackingEvents & WithTags {
  """Permanent system identifier for this `PersonRole`"""
  id: ID! @unique

  """A common name for this `PersonRole`"""
  name: String

  """A brief description of this `PersonRole`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `PersonRole`
  """
  url: URI @unique

  """The `Person` that plays the role"""
  person: Person! @playsRole

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfPersonRole!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `PersonRole`"""
  type: CodedConcept

  """
  Categories this `PersonRole` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `PersonRole`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `PersonRole`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """The most recent audit record for this `PersonRole`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `PersonRole`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `PersonRoles`"""
type PersonRoleConnection implements EntityConnection {
  """`PersonRole` nodes"""
  nodes: [PersonRole!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `PersonRoleConnections`"""
input PersonRoleConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `PersonRoles`"""
  filter: PersonRoleFilter
}

"""A filter for `PersonRoles`"""
input PersonRoleFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `person`"""
  person: PersonFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of a `PersonRoleFilter`"""
  not: PersonRoleFilter

  """Disjunction of `PersonRoleFilters`"""
  or: [PersonRoleFilter!]

  """Conjunction of `PersonRoleFilters`"""
  and: [PersonRoleFilter!]
}

"""
An interface for a type that plays a role in the context of another type during a specified time period
"""
interface PlaysRole {
  """The entity in the context of which the role is played"""
  inContextOf: InContextOf!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly
}

"""A postal address"""
type PostalAddress implements Entity & Auditable & WithCategories & WithDataQualityValues & WithTags & WithTrackingEvents {
  """Permanent system identifier for this `PostalAddress`"""
  id: ID! @unique

  """A common name for this `PostalAddress`"""
  name: String

  """A brief description of this `PostalAddress`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `PostalAddress`
  """
  url: URI @unique

  """A primary classification for this `PostalAddress`"""
  type: CodedConcept

  """
  Categories this `PostalAddress` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `PostalAddress`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `PostalAddress`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """A connection to data quality values associated with this entity"""
  dataQualityValues(
    """Parameters to filter, sort, paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection!

  """A multi-line formatted version of the address"""
  text: String

  """The country of the address"""
  country: CodedConcept

  """The locale of the address"""
  locale: CodedConcept

  """The administrative level 1 region of the address"""
  stateProv: CodedConcept

  """The city/town of the address"""
  locality: String

  """The postal code of the address"""
  postalCode: String

  """Street line 1"""
  street1: String

  """Street line 2"""
  street2: String

  """Geographic coordinates of the address serialized as GeoJSON"""
  geo: JSON

  """Plus code"""
  plusCode: String

  """A list of address components"""
  components(
    """Parameters to filter, sort, and paginate the connection"""
    input: PostalAddressComponentConnectionInput
  ): PostalAddressComponentConnection!

  """The most recent audit record for this `PostalAddress`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `PostalAddress`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""
A component of a postal address

Addresses in different parts of the world are comprised of varied components, such as a PO Box, street, city or postal code.
A `PostalAddressComponent` normalizes these values and their common abbreviations to support searching for addresses.
"""
type PostalAddressComponent implements Entity & Auditable & PlaysRole & WithDataQualityValues & WithCategories & WithTrackingEvents & WithTags {
  """Permanent system identifier for this `PostalAddressComponent`"""
  id: ID! @unique

  """A common name for this `PostalAddressComponent`"""
  name: String

  """A brief description of this `PostalAddressComponent`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `PostalAddressComponent`
  """
  url: URI @unique

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfPostalAddressComponent!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `PostalAddressComponent`"""
  type: CodedConcept!

  """
  Categories this `PostalAddressComponent` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `PostalAddressComponent`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `PostalAddressComponent`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """A connection to data quality values associated with this entity"""
  dataQualityValues(
    """Parameters to filter, sort, paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection!

  """Long form of the component value"""
  value: String! @playsRole

  """Abbreviated form of the component value"""
  abbreviation: String

  """The most recent audit record for this `PostalAddressComponent`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `PostalAddressComponent`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `PostalAddressComponents`"""
type PostalAddressComponentConnection implements EntityConnection {
  """`PostalAddressComponent` nodes"""
  nodes: [PostalAddressComponent!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""
Filter, sort, paginate parameters for `PostalAddressComponentConnections`
"""
input PostalAddressComponentConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `PostalAddressComponents`"""
  filter: PostalAddressComponentFilter
}

"""A filter for `PostalAddressComponents`"""
input PostalAddressComponentFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `dataQualityValues`"""
  dataQualityValues: DataQualityValueFilter

  """Filter for `value`"""
  value: StringFilter

  """Filter for `abbreviation`"""
  abbreviation: StringFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of a `PostalAddressComponentFilter`"""
  not: PostalAddressComponentFilter

  """Disjunction of `PostalAddressComponentFilters`"""
  or: [PostalAddressComponentFilter!]

  """Conjunction of `PostalAddressComponentFilters`"""
  and: [PostalAddressComponentFilter!]
}

"""A connection to `PostalAddresses`"""
type PostalAddressConnection implements EntityConnection {
  """`PostalAddress` nodes"""
  nodes: [PostalAddress!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `PostalAddressConnections`"""
input PostalAddressConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `PostalAddresses`"""
  filter: PostalAddressFilter
}

"""A filter for `PostalAddresses`"""
input PostalAddressFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `dataQualityValues`"""
  dataQualityValues: DataQualityValueFilter

  """Filter for `text`"""
  text: StringFilter

  """Filter for `country`"""
  country: CodedConceptFilter

  """Filter for `locale`"""
  locale: CodedConceptFilter

  """Filter for `stateProv`"""
  stateProv: CodedConceptFilter

  """Filter for `locality`"""
  locality: StringFilter

  """Filter for `postalCode`"""
  postalCode: StringFilter

  """Filter for `street1`"""
  street1: StringFilter

  """Filter for `street2`"""
  street2: StringFilter

  """Filter for `geo`"""
  geo: JSONFilter

  """Filter for `plusCode`"""
  plusCode: StringFilter

  """Filter for `components`"""
  components: PostalAddressComponentFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Negation of a `PostalAddressFilter`"""
  not: PostalAddressFilter

  """Disjunction of `PostalAddressFilters`"""
  or: [PostalAddressFilter!]

  """Conjunction of `PostalAddressFilters`"""
  and: [PostalAddressFilter!]
}

"""A measured amount of something"""
type Quantity {
  """The amount of the quantity"""
  amount: Float!

  """The unit of measure of the quantity"""
  unit: CodedConceptCurie!
}

"""A filter for `Quantities`"""
input QuantityFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `amount`"""
  amount: FloatFilter

  """Filter for `unit`"""
  unit: CodedConceptCurieFilter

  """Negation of a `QuantityFilter`"""
  not: QuantityFilter

  """Disjunction of `QuantityFilters`"""
  or: [QuantityFilter!]

  """Conjunction of `QuantityFilters`"""
  and: [QuantityFilter!]
}

"""An input for `Quantities`"""
input QuantityInput {
  """Set field `amount`"""
  amount: Float!

  """Set field `unit`"""
  unit: CodedConceptCurie!
}

"""Read API"""
type Query {
  """Find an entity by its id"""
  node(
    """The id of the entity"""
    id: ID!
  ): Entity

  """Get an `Observation` by its key"""
  observation(
    """An observation key (including its subject and event ids)"""
    key: ObservationKey!
  ): Observation

  """Get a `Category` by its id"""
  category(
    """`Category` id"""
    id: ID!
  ): Category

  """Get a connection of `Categories`"""
  categoryConnection(
    """Filter, sort, and paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection

  """Get a `ClientApp` by its id"""
  clientApp(
    """`ClientApp` id"""
    id: ID!
  ): ClientApp

  """Get a connection of `ClientApps`"""
  clientAppConnection(
    """Filter, sort, and paginate the connection"""
    input: ClientAppConnectionInput
  ): ClientAppConnection

  """Get a `CodedConcept` by its id"""
  codedConcept(
    """`CodedConcept` id"""
    id: ID!
  ): CodedConcept

  """Get a connection of `CodedConcepts`"""
  codedConceptConnection(
    """Filter, sort, and paginate the connection"""
    input: CodedConceptConnectionInput
  ): CodedConceptConnection

  """Get a `ContactPoint` by its id"""
  contactPoint(
    """`ContactPoint` id"""
    id: ID!
  ): ContactPoint

  """Get a connection of `ContactPoints`"""
  contactPointConnection(
    """Filter, sort, and paginate the connection"""
    input: ContactPointConnectionInput
  ): ContactPointConnection

  """Get a `DataQualityMetric` by its id"""
  dataQualityMetric(
    """`DataQualityMetric` id"""
    id: ID!
  ): DataQualityMetric

  """Get a connection of `DataQualityMetrics`"""
  dataQualityMetricConnection(
    """Filter, sort, and paginate the connection"""
    input: DataQualityMetricConnectionInput
  ): DataQualityMetricConnection

  """Get a connection of `DataQualityMetricRoles`"""
  dataQualityMetricRoleConnection(
    """Filter, sort, and paginate the connection"""
    input: DataQualityMetricRoleConnectionInput
  ): DataQualityMetricRoleConnection

  """Get a `DataQualityValue` by its id"""
  dataQualityValue(
    """`DataQualityValue` id"""
    id: ID!
  ): DataQualityValue

  """Get a connection of `DataQualityValues`"""
  dataQualityValueConnection(
    """Filter, sort, and paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection

  """Get a `DeliveryStream` by its id"""
  deliveryStream(
    """`DeliveryStream` id"""
    id: ID!
  ): DeliveryStream

  """Get a connection of `DeliveryStreams`"""
  deliveryStreamConnection(
    """Filter, sort, and paginate the connection"""
    input: DeliveryStreamConnectionInput
  ): DeliveryStreamConnection

  """Get a `Device` by its id"""
  device(
    """`Device` id"""
    id: ID!
  ): Device

  """Get a connection of `Devices`"""
  deviceConnection(
    """Filter, sort, and paginate the connection"""
    input: DeviceConnectionInput
  ): DeviceConnection

  """Get a connection of `DeviceRoles`"""
  deviceRoleConnection(
    """Filter, sort, and paginate the connection"""
    input: DeviceRoleConnectionInput
  ): DeviceRoleConnection

  """Get a `DeviceModel` by its id"""
  deviceModel(
    """`DeviceModel` id"""
    id: ID!
  ): DeviceModel

  """Get a connection of `DeviceModels`"""
  deviceModelConnection(
    """Filter, sort, and paginate the connection"""
    input: DeviceModelConnectionInput
  ): DeviceModelConnection

  """Get a connection of `DeviceModelRoles`"""
  deviceModelRoleConnection(
    """Filter, sort, and paginate the connection"""
    input: DeviceModelRoleConnectionInput
  ): DeviceModelRoleConnection

  """Get a `FunctionalExpression` by its id"""
  functionalExpression(
    """`FunctionalExpression` id"""
    id: ID!
  ): FunctionalExpression

  """Get a connection of `FunctionalExpressions`"""
  functionalExpressionConnection(
    """Filter, sort, and paginate the connection"""
    input: FunctionalExpressionConnectionInput
  ): FunctionalExpressionConnection

  """Get a connection of `FunctionalExpressionRoles`"""
  functionalExpressionRoleConnection(
    """Filter, sort, and paginate the connection"""
    input: FunctionalExpressionRoleConnectionInput
  ): FunctionalExpressionRoleConnection

  """Get an `Identifier` by its id"""
  identifier(
    """`Identifier` id"""
    id: ID!
  ): Identifier

  """Get a connection of `Identifiers`"""
  identifierConnection(
    """Filter, sort, and paginate the connection"""
    input: IdentifierConnectionInput
  ): IdentifierConnection

  """Get an `Image` by its id"""
  image(
    """`Image` id"""
    id: ID!
  ): Image

  """Get a connection of `Images`"""
  imageConnection(
    """Filter, sort, and paginate the connection"""
    input: ImageConnectionInput
  ): ImageConnection

  """Get a connection of `ImageRoles`"""
  imageRoleConnection(
    """Filter, sort, and paginate the connection"""
    input: ImageRoleConnectionInput
  ): ImageRoleConnection

  """Get a `Library` by its id"""
  library(
    """`Library` id"""
    id: ID!
  ): Library

  """Get a connection of `Libraries`"""
  libraryConnection(
    """Filter, sort, and paginate the connection"""
    input: LibraryConnectionInput
  ): LibraryConnection

  """Get a `Location` by its id"""
  location(
    """`Location` id"""
    id: ID!
  ): Location

  """Get a connection of `Locations`"""
  locationConnection(
    """Filter, sort, and paginate the connection"""
    input: LocationConnectionInput
  ): LocationConnection

  """Get a connection of `LocationRoles`"""
  locationRoleConnection(
    """Filter, sort, and paginate the connection"""
    input: LocationRoleConnectionInput
  ): LocationRoleConnection

  """Get a `LocationEvent` by its id"""
  locationEvent(
    """`LocationEvent` id"""
    id: ID!
  ): LocationEvent

  """Get a connection of `LocationEvents`"""
  locationEventConnection(
    """Filter, sort, and paginate the connection"""
    input: LocationEventConnectionInput
  ): LocationEventConnection

  """Get a connection of `Observations`"""
  observationConnection(
    """Filter, sort, and paginate the connection"""
    input: ObservationConnectionInput
  ): ObservationConnection

  """Get an `Organization` by its id"""
  organization(
    """`Organization` id"""
    id: ID!
  ): Organization

  """Get a connection of `Organizations`"""
  organizationConnection(
    """Filter, sort, and paginate the connection"""
    input: OrganizationConnectionInput
  ): OrganizationConnection

  """Get a connection of `OrganizationRoles`"""
  organizationRoleConnection(
    """Filter, sort, and paginate the connection"""
    input: OrganizationRoleConnectionInput
  ): OrganizationRoleConnection

  """Get a `Person` by its id"""
  person(
    """`Person` id"""
    id: ID!
  ): Person

  """Get a connection of `Persons`"""
  personConnection(
    """Filter, sort, and paginate the connection"""
    input: PersonConnectionInput
  ): PersonConnection

  """Get a connection of `PersonRoles`"""
  personRoleConnection(
    """Filter, sort, and paginate the connection"""
    input: PersonRoleConnectionInput
  ): PersonRoleConnection

  """Get a `PostalAddress` by its id"""
  postalAddress(
    """`PostalAddress` id"""
    id: ID!
  ): PostalAddress

  """Get a connection of `PostalAddresses`"""
  postalAddressConnection(
    """Filter, sort, and paginate the connection"""
    input: PostalAddressConnectionInput
  ): PostalAddressConnection

  """Get a `PostalAddressComponent` by its id"""
  postalAddressComponent(
    """`PostalAddressComponent` id"""
    id: ID!
  ): PostalAddressComponent

  """Get a connection of `PostalAddressComponents`"""
  postalAddressComponentConnection(
    """Filter, sort, and paginate the connection"""
    input: PostalAddressComponentConnectionInput
  ): PostalAddressComponentConnection

  """Get a `SensorStudy` by its id"""
  sensorStudy(
    """`SensorStudy` id"""
    id: ID!
  ): SensorStudy

  """Get a connection of `SensorStudies`"""
  sensorStudyConnection(
    """Filter, sort, and paginate the connection"""
    input: SensorStudyConnectionInput
  ): SensorStudyConnection

  """Get a `SensorSubject` by its id"""
  sensorSubject(
    """`SensorSubject` id"""
    id: ID!
  ): SensorSubject

  """Get a connection of `SensorSubjects`"""
  sensorSubjectConnection(
    """Filter, sort, and paginate the connection"""
    input: SensorSubjectConnectionInput
  ): SensorSubjectConnection

  """Get a connection of `SensorSubjectRoles`"""
  sensorSubjectRoleConnection(
    """Filter, sort, and paginate the connection"""
    input: SensorSubjectRoleConnectionInput
  ): SensorSubjectRoleConnection

  """Get a `Tag` by its id"""
  tag(
    """`Tag` id"""
    id: ID!
  ): Tag

  """Get a connection of `Tags`"""
  tagConnection(
    """Filter, sort, and paginate the connection"""
    input: TagConnectionInput
  ): TagConnection

  """Get a `Token` by its id"""
  token(
    """`Token` id"""
    id: ID!
  ): Token

  """Get a connection of `Tokens`"""
  tokenConnection(
    """Filter, sort, and paginate the connection"""
    input: TokenConnectionInput
  ): TokenConnection

  """Get a `TrackingEvent` by its id"""
  trackingEvent(
    """`TrackingEvent` id"""
    id: ID!
  ): TrackingEvent

  """Get a connection of `TrackingEvents`"""
  trackingEventConnection(
    """Filter, sort, and paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection

  """Get a `Vocabulary` by its id"""
  vocabulary(
    """`Vocabulary` id"""
    id: ID!
  ): Vocabulary

  """Get a connection of `Vocabularies`"""
  vocabularyConnection(
    """Filter, sort, and paginate the connection"""
    input: VocabularyConnectionInput
  ): VocabularyConnection
}

"""
Input type for mutating `Category` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelCategoryInput {
  """Create a `Category` and associate it with the context entity"""
  create: CreateCategoryInput

  """
  Add an association between the `Category` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `Category` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `ClientApp` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelClientAppInput {
  """Create a `ClientApp` and associate it with the context entity"""
  create: CreateClientAppInput

  """
  Add an association between the `ClientApp` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `ClientApp` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `CodedConcept` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelCodedConceptInput {
  """Create a `CodedConcept` and associate it with the context entity"""
  create: CreateCodedConceptInput

  """
  Add an association between the `CodedConcept` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `CodedConcept` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `ContactPoint` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelContactPointInput {
  """Create a `ContactPoint` and associate it with the context entity"""
  create: CreateContactPointInput

  """
  Add an association between the `ContactPoint` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `ContactPoint` with the given id and the context entity
  """
  disassociate: ID
}

"""
A special input for handling mutations of `inContextOf` fields for roles
"""
input RelContextEntityInput {
  """The context entity id"""
  entity: ID!

  """
  Field name on the context entity
  
  This is only required in cases where the context entity has multiple associations with the role type
  through different fields.
  """
  field: String
}

"""
Input type for mutating `DataQualityMetric` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelDataQualityMetricInput {
  """Create a `DataQualityMetric` and associate it with the context entity"""
  create: CreateDataQualityMetricInput

  """
  Add an association between the `DataQualityMetric` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `DataQualityMetric` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `DataQualityMetricRole` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelDataQualityMetricRoleInput {
  """
  Create a `DataQualityMetricRole` and associate it with the context entity
  """
  create: CreateDataQualityMetricRoleInput

  """
  Add an association between the `DataQualityMetricRole` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `DataQualityMetricRole` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `DeliveryStream` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelDeliveryStreamInput {
  """Create a `DeliveryStream` and associate it with the context entity"""
  create: CreateDeliveryStreamInput

  """
  Add an association between the `DeliveryStream` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `DeliveryStream` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `Device` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelDeviceInput {
  """Create a `Device` and associate it with the context entity"""
  create: CreateDeviceInput

  """
  Add an association between the `Device` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `Device` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `DeviceModel` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelDeviceModelInput {
  """Create a `DeviceModel` and associate it with the context entity"""
  create: CreateDeviceModelInput

  """
  Add an association between the `DeviceModel` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `DeviceModel` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `DeviceModelRole` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelDeviceModelRoleInput {
  """Create a `DeviceModelRole` and associate it with the context entity"""
  create: CreateDeviceModelRoleInput

  """
  Add an association between the `DeviceModelRole` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `DeviceModelRole` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `DeviceRole` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelDeviceRoleInput {
  """Create a `DeviceRole` and associate it with the context entity"""
  create: CreateDeviceRoleInput

  """
  Add an association between the `DeviceRole` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `DeviceRole` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `FunctionalExpression` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelFunctionalExpressionInput {
  """
  Create a `FunctionalExpression` and associate it with the context entity
  """
  create: CreateFunctionalExpressionInput

  """
  Add an association between the `FunctionalExpression` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `FunctionalExpression` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `FunctionalExpressionRole` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelFunctionalExpressionRoleInput {
  """
  Create a `FunctionalExpressionRole` and associate it with the context entity
  """
  create: CreateFunctionalExpressionRoleInput

  """
  Add an association between the `FunctionalExpressionRole` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `FunctionalExpressionRole` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `Identifier` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelIdentifierInput {
  """Create an `Identifier` and associate it with the context entity"""
  create: CreateIdentifierInput

  """
  Add an association between the `Identifier` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `Identifier` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `Image` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelImageInput {
  """Create an `Image` and associate it with the context entity"""
  create: CreateImageInput

  """
  Add an association between the `Image` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `Image` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `ImageRole` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelImageRoleInput {
  """Create an `ImageRole` and associate it with the context entity"""
  create: CreateImageRoleInput

  """
  Add an association between the `ImageRole` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `ImageRole` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `Library` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelLibraryInput {
  """Create a `Library` and associate it with the context entity"""
  create: CreateLibraryInput

  """
  Add an association between the `Library` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `Library` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `LocationEvent` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelLocationEventInput {
  """Create a `LocationEvent` and associate it with the context entity"""
  create: CreateLocationEventInput

  """
  Add an association between the `LocationEvent` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `LocationEvent` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `Location` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelLocationInput {
  """Create a `Location` and associate it with the context entity"""
  create: CreateLocationInput

  """
  Add an association between the `Location` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `Location` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `LocationRole` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelLocationRoleInput {
  """Create a `LocationRole` and associate it with the context entity"""
  create: CreateLocationRoleInput

  """
  Add an association between the `LocationRole` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `LocationRole` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `Observation` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelObservationInput {
  """Create an `Observation` and associate it with the context entity"""
  create: CreateObservationInput

  """
  Add an association between the `Observation` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `Observation` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `Organization` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelOrganizationInput {
  """Create an `Organization` and associate it with the context entity"""
  create: CreateOrganizationInput

  """
  Add an association between the `Organization` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `Organization` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `OrganizationRole` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelOrganizationRoleInput {
  """Create an `OrganizationRole` and associate it with the context entity"""
  create: CreateOrganizationRoleInput

  """
  Add an association between the `OrganizationRole` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `OrganizationRole` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `Person` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelPersonInput {
  """Create a `Person` and associate it with the context entity"""
  create: CreatePersonInput

  """
  Add an association between the `Person` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `Person` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `PersonRole` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelPersonRoleInput {
  """Create a `PersonRole` and associate it with the context entity"""
  create: CreatePersonRoleInput

  """
  Add an association between the `PersonRole` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `PersonRole` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `PostalAddressComponent` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelPostalAddressComponentInput {
  """
  Create a `PostalAddressComponent` and associate it with the context entity
  """
  create: CreatePostalAddressComponentInput

  """
  Add an association between the `PostalAddressComponent` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `PostalAddressComponent` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `PostalAddress` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelPostalAddressInput {
  """Create a `PostalAddress` and associate it with the context entity"""
  create: CreatePostalAddressInput

  """
  Add an association between the `PostalAddress` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `PostalAddress` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `SensorStudy` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelSensorStudyInput {
  """Create a `SensorStudy` and associate it with the context entity"""
  create: CreateSensorStudyInput

  """
  Add an association between the `SensorStudy` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `SensorStudy` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `SensorSubject` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelSensorSubjectInput {
  """Create a `SensorSubject` and associate it with the context entity"""
  create: CreateSensorSubjectInput

  """
  Add an association between the `SensorSubject` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `SensorSubject` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `SensorSubjectRole` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelSensorSubjectRoleInput {
  """Create a `SensorSubjectRole` and associate it with the context entity"""
  create: CreateSensorSubjectRoleInput

  """
  Add an association between the `SensorSubjectRole` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `SensorSubjectRole` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `Tag` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelTagInput {
  """Create a `Tag` and associate it with the context entity"""
  create: CreateTagInput

  """
  Add an association between the `Tag` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `Tag` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `Token` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelTokenInput {
  """Create a `Token` and associate it with the context entity"""
  create: CreateTokenInput

  """
  Add an association between the `Token` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `Token` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `TrackingEvent` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelTrackingEventInput {
  """Create a `TrackingEvent` and associate it with the context entity"""
  create: CreateTrackingEventInput

  """
  Add an association between the `TrackingEvent` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `TrackingEvent` with the given id and the context entity
  """
  disassociate: ID
}

"""
Input type for mutating `Vocabulary` associations with a context entity

Exactly one of the `create`, `associate` or `disassociate` fields should be specified.
"""
input RelVocabularyInput {
  """Create a `Vocabulary` and associate it with the context entity"""
  create: CreateVocabularyInput

  """
  Add an association between the `Vocabulary` with the given id and the context entity
  """
  associate: ID

  """
  Remove an existing association between the `Vocabulary` with the given id and the context entity
  """
  disassociate: ID
}

"""
A formal research process, involving human subjects and biometrics sensors, to investigate a medical hypothesis

A clinical study assessing the utility, impact, pharmacological, physiological, and/or psychological effects of a
particular treatment, procedure, drug, device, biologic, food product, cosmetic, care plan, or subject characteristic.
These studies also make use of biometric sensors, often wearable technology, to capture high frequency streams of
data about subjects.
"""
type SensorStudy implements Entity & Auditable & WithCategories & WithDataQualityValues & WithIdentifiers & WithTags & WithTrackingEvents @helper {
  """Permanent system identifier for this `SensorStudy`"""
  id: ID! @unique

  """A common name for this `SensorStudy`"""
  name: String!

  """A brief description of this `SensorStudy`"""
  description: String!

  """
  A url pointing to a resource with more detailed information about this `SensorStudy`
  """
  url: URI @unique

  """A connection to any other identifiers for this `SensorStudy`"""
  identifiers(
    """Parameters to filter, sort, paginate the connection"""
    input: IdentifierConnectionInput
  ): IdentifierConnection!

  """A primary classification for this `SensorStudy`"""
  type: CodedConcept

  """
  Categories this `SensorStudy` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `SensorStudy`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `SensorStudy`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """A connection to data quality values associated with this entity"""
  dataQualityValues(
    """Parameters to filter, sort, paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection!

  """Sponsor's protocol identifier for the study"""
  protocol_id: String!

  """Phase of the study"""
  phase: CodedConcept!

  """Primary indication under study"""
  primaryIndication: CodedConcept!

  """Secondary indications under study"""
  secondaryIndications(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """Organization(s) legally responsible for the study's conduct"""
  sponsors: [OrganizationRole!] @resolve(with: "CONNECTION_SUBSET", config: "{\n  connection: organizations\n  input: {\n    filter: {\n      type: {curie: {eq: 'msc:organization-role/sponsor'}}\n    }\n  }\n}")

  """Organizations playing any role in the study (including sponsors)"""
  organizations(
    """Parameters to filter, sort, paginate the connection"""
    input: OrganizationRoleConnectionInput
  ): OrganizationRoleConnection!

  """Persons playing a non-subject role in the study (aka, like staff)"""
  persons(
    """Parameters to filter, sort, paginate the connection"""
    input: PersonRoleConnectionInput
  ): PersonRoleConnection!

  """Sensor Study subjects"""
  subjects(
    """Parameters to filter, sort, paginate the connection"""
    input: SensorSubjectRoleConnectionInput
  ): SensorSubjectRoleConnection!

  """Delivery streams to which to send collected observations"""
  deliveryStreams(input: DeliveryStreamConnectionInput): DeliveryStreamConnection!

  """Data quality metrics defined over study data"""
  dataQualityMetrics(input: DataQualityMetricRoleConnectionInput): DataQualityMetricRoleConnection!

  """Sensor observations collected for this `SensorStudy`"""
  observations(
    """Parameters to filter, sort, and paginate the connection"""
    input: ObservationConnectionInput
  ): ObservationConnection! @oneToMany

  """The most recent audit record for this `SensorStudy`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `SensorStudy`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `SensorStudies`"""
type SensorStudyConnection implements EntityConnection {
  """`SensorStudy` nodes"""
  nodes: [SensorStudy!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `SensorStudyConnections`"""
input SensorStudyConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `SensorStudies`"""
  filter: SensorStudyFilter
}

"""A filter for `SensorStudies`"""
input SensorStudyFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `identifiers`"""
  identifiers: IdentifierFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `dataQualityValues`"""
  dataQualityValues: DataQualityValueFilter

  """Filter for `protocol_id`"""
  protocol_id: StringFilter

  """Filter for `phase`"""
  phase: CodedConceptFilter

  """Filter for `primaryIndication`"""
  primaryIndication: CodedConceptFilter

  """Filter for `secondaryIndications`"""
  secondaryIndications: CategoryFilter

  """Filter for `organizations`"""
  organizations: OrganizationRoleFilter

  """Filter for `persons`"""
  persons: PersonRoleFilter

  """Filter for `subjects`"""
  subjects: SensorSubjectRoleFilter

  """Filter for `deliveryStreams`"""
  deliveryStreams: DeliveryStreamFilter

  """Filter for `dataQualityMetrics`"""
  dataQualityMetrics: DataQualityMetricRoleFilter

  """Filter for `observations`"""
  observations: ObservationFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Negation of a `SensorStudyFilter`"""
  not: SensorStudyFilter

  """Disjunction of `SensorStudyFilters`"""
  or: [SensorStudyFilter!]

  """Conjunction of `SensorStudyFilters`"""
  and: [SensorStudyFilter!]
}

"""
A human being who undergoes the observations and interventions of a sensor study
"""
type SensorSubject implements Entity & Auditable & WithIdentifiers & WithDataQualityValues & WithCategories & WithTags & WithTokens & WithTrackingEvents @helper {
  """Permanent system identifier for this `SensorSubject`"""
  id: ID! @unique

  """A common name for this `SensorSubject`"""
  name: String

  """A brief description of this `SensorSubject`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `SensorSubject`
  """
  url: URI @unique

  """A connection to any other identifiers for this `SensorSubject`"""
  identifiers(
    """Parameters to filter, sort, paginate the connection"""
    input: IdentifierConnectionInput
  ): IdentifierConnection!

  """A primary classification for this `SensorSubject`"""
  type: CodedConcept

  """
  Categories this `SensorSubject` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `SensorSubject`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `SensorSubject`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """A connection to data quality values associated with this entity"""
  dataQualityValues(
    """Parameters to filter, sort, paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection!

  """The connection of tokens associated with an agent"""
  tokens(
    """Parameters to filter, sort, paginate the connection"""
    input: TokenConnectionInput
  ): TokenConnection!

  """The human being under study"""
  person: Person

  """The study this subject is associated with"""
  study: SensorStudy! @inverseOf(field: "subjects")

  """The study location where the subject is enrolled, if any"""
  site: Organization

  """Devices currently assigned to this subject"""
  assignedDevices: [DeviceRole!] @resolve(with: "CONNECTION_SUBSET", config: "{\n  connection: devices\n  isActive: true\n}")

  """Device assignment history for this `SensorSubject`"""
  devices(
    """Parameters to filter, sort, and paginate the connection"""
    input: DeviceRoleConnectionInput
  ): DeviceRoleConnection!

  """Sensor observations collected for this `SensorSubject`"""
  observations(
    """Parameters to filter, sort, and paginate the connection"""
    input: ObservationConnectionInput
  ): ObservationConnection! @oneToMany

  """The most recent audit record for this `SensorSubject`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `SensorSubject`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `SensorSubjects`"""
type SensorSubjectConnection implements EntityConnection {
  """`SensorSubject` nodes"""
  nodes: [SensorSubject!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `SensorSubjectConnections`"""
input SensorSubjectConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `SensorSubjects`"""
  filter: SensorSubjectFilter
}

"""A filter for `SensorSubjects`"""
input SensorSubjectFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `identifiers`"""
  identifiers: IdentifierFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `dataQualityValues`"""
  dataQualityValues: DataQualityValueFilter

  """Filter for `tokens`"""
  tokens: TokenFilter

  """Filter for `person`"""
  person: PersonFilter

  """Filter for `study`"""
  study: SensorStudyFilter

  """Filter for `site`"""
  site: OrganizationFilter

  """Filter for `devices`"""
  devices: DeviceRoleFilter

  """Filter for `observations`"""
  observations: ObservationFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Negation of a `SensorSubjectFilter`"""
  not: SensorSubjectFilter

  """Disjunction of `SensorSubjectFilters`"""
  or: [SensorSubjectFilter!]

  """Conjunction of `SensorSubjectFilters`"""
  and: [SensorSubjectFilter!]
}

"""A `SensorSubject` playing a role in the context of another entity"""
type SensorSubjectRole implements Entity & Auditable & PlaysRole & WithCategories & WithTrackingEvents & WithTags {
  """Permanent system identifier for this `SensorSubjectRole`"""
  id: ID! @unique

  """A common name for this `SensorSubjectRole`"""
  name: String

  """A brief description of this `SensorSubjectRole`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `SensorSubjectRole`
  """
  url: URI @unique

  """The `SensorSubject` that plays the role"""
  sensorSubject: SensorSubject! @playsRole

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfSensorSubjectRole!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `SensorSubjectRole`"""
  type: CodedConcept

  """
  Categories this `SensorSubjectRole` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `SensorSubjectRole`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `SensorSubjectRole`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """The most recent audit record for this `SensorSubjectRole`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `SensorSubjectRole`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `SensorSubjectRoles`"""
type SensorSubjectRoleConnection implements EntityConnection {
  """`SensorSubjectRole` nodes"""
  nodes: [SensorSubjectRole!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `SensorSubjectRoleConnections`"""
input SensorSubjectRoleConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `SensorSubjectRoles`"""
  filter: SensorSubjectRoleFilter
}

"""A filter for `SensorSubjectRoles`"""
input SensorSubjectRoleFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `sensorSubject`"""
  sensorSubject: SensorSubjectFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of a `SensorSubjectRoleFilter`"""
  not: SensorSubjectRoleFilter

  """Disjunction of `SensorSubjectRoleFilters`"""
  or: [SensorSubjectRoleFilter!]

  """Conjunction of `SensorSubjectRoleFilters`"""
  and: [SensorSubjectRoleFilter!]
}

"""
The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
"""
scalar String

"""A filter for `Strings`"""
input StringFilter {
  """True if the value missing"""
  isNull: Boolean

  """If true, matches are case sensitive"""
  caseSensitive: Boolean

  """The value contains the specified string"""
  contains: String

  """The value starts with the specified string"""
  startsWith: String

  """The value ends with the specified string"""
  endsWith: String

  """The value matches the specified POSIX regular expression"""
  matchesRegex: String

  """The value equals the specified `String`"""
  eq: String

  """The value does not equal the specified `String`"""
  ne: String

  """The value is strictly less than the specified `String`"""
  lt: String

  """The value is less than or equal to the specified `String`"""
  le: String

  """The value is strictly greater than the specified `String`"""
  gt: String

  """The value is greater than or equal to the specified `String`"""
  ge: String

  """The value is a member of the specified `String` list"""
  in: [String!]

  """Negation of a `StringFilter`"""
  not: StringFilter

  """Disjunction of `StringFilters`"""
  or: [StringFilter!]

  """Conjunction of `StringFilters`"""
  and: [StringFilter!]
}

"""
A custom named value

A `Tag` is a specific piece of metadata associated with another entity.
"""
type Tag implements Entity & Auditable & PlaysRole & WithCategories {
  """Permanent system identifier for this `Tag`"""
  id: ID! @unique

  """The name of the tag"""
  name: String! @playsRole

  """A brief description of this `Tag`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `Tag`
  """
  url: URI @unique

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfTag!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `Tag`"""
  type: CodedConcept

  """Categories this `Tag` embodies beyond its primary classified `type`"""
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  The value of the tag, serialized as JSON
  
  Note: the JSON value does not need to be a JSON object, but can be any properly serialized JSON value, including
  a string, number, boolean, array or object.
  """
  value: JSON!

  """
  True if the value is sensitive and should be obscured in certain contexts, such as a password or secret key.
  """
  tagIsSensitive: Boolean

  """The most recent audit record for this `Tag`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `Tag`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `Tags`"""
type TagConnection implements EntityConnection {
  """`Tag` nodes"""
  nodes: [Tag!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `TagConnections`"""
input TagConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `Tags`"""
  filter: TagFilter
}

"""A filter for `Tags`"""
input TagFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `value`"""
  value: JSONFilter

  """Filter for `tagIsSensitive`"""
  tagIsSensitive: BooleanFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of a `TagFilter`"""
  not: TagFilter

  """Disjunction of `TagFilters`"""
  or: [TagFilter!]

  """Conjunction of `TagFilters`"""
  and: [TagFilter!]
}

"""
An opaque access token

An opaque token, created for a specific purpose and associated with a context entity that has agency.
Often used to provide users or subjects with a short code to enter into a system to unlock access to certain
functionality.
"""
type Token implements Entity & Auditable & PlaysRole & WithCategories & WithTags & WithTrackingEvents {
  """Permanent system identifier for this `Token`"""
  id: ID! @unique

  """A common name for this `Token`"""
  name: String

  """A brief description of this `Token`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `Token`
  """
  url: URI @unique

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfToken!

  """The time period during which the role is played"""
  during: Period

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `Token`"""
  type: CodedConcept!

  """Categories this `Token` embodies beyond its primary classified `type`"""
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `Token`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `Token`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """The token issuer"""
  issuer: Organization!

  """The token value"""
  token: String! @playsRole

  """The most recent audit record for this `Token`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `Token`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `Tokens`"""
type TokenConnection implements EntityConnection {
  """`Token` nodes"""
  nodes: [Token!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `TokenConnections`"""
input TokenConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `Tokens`"""
  filter: TokenFilter
}

"""A filter for `Tokens`"""
input TokenFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `issuer`"""
  issuer: OrganizationFilter

  """Filter for `token`"""
  token: StringFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of a `TokenFilter`"""
  not: TokenFilter

  """Disjunction of `TokenFilters`"""
  or: [TokenFilter!]

  """Conjunction of `TokenFilters`"""
  and: [TokenFilter!]
}

"""
An event in the lifecycle of an entity

A real world event that happens in the lifecycle of an entity, as the result
of some action by a user performing a given role. These generally do not
include database, audit-type events, like object creation or updates. Those
types of events are automatically tracked via the `Auditable` interface.
"""
type TrackingEvent implements Entity & Auditable & WithCategories & WithTags & PlaysRole @event {
  """Permanent system identifier for this `TrackingEvent`"""
  id: ID! @unique

  """A common name for this `TrackingEvent`"""
  name: String

  """A brief description of this `TrackingEvent`"""
  description: String!

  """
  A url pointing to a resource with more detailed information about this `TrackingEvent`
  """
  url: URI @unique

  """The entity in the context of which the role is played"""
  inContextOf: InContextOfTrackingEvent!

  """The period during which the tracking event occurred"""
  during: Period!

  """
  The rank (order) of this role entity among its peers in the context of the associated entity
  """
  itemNumber: Int

  """
  The count of peers of this role entity in the context of the associated entity
  """
  itemCount: Int! @resolve(with: "VIRTUAL") @readonly

  """A primary classification for this `TrackingEvent`"""
  type: CodedConcept! @playsRole

  """
  Categories this `TrackingEvent` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `TrackingEvent`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """The application that initiated the event"""
  clientApp: ClientApp! @playsRole

  """A person playing a particular role that initiated the event"""
  user: PersonRole @playsRole

  """The most recent audit record for this `TrackingEvent`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `TrackingEvent`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `TrackingEvents`"""
type TrackingEventConnection implements EntityConnection {
  """`TrackingEvent` nodes"""
  nodes: [TrackingEvent!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `TrackingEventConnections`"""
input TrackingEventConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `TrackingEvents`"""
  filter: TrackingEventFilter
}

"""A filter for `TrackingEvents`"""
input TrackingEventFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `during`"""
  during: PeriodFilter

  """Filter for `itemNumber`"""
  itemNumber: IntFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `clientApp`"""
  clientApp: ClientAppFilter

  """Filter for `user`"""
  user: PersonRoleFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Filter for `inContextOf`"""
  inContextOf: InContextOfFilter

  """Negation of a `TrackingEventFilter`"""
  not: TrackingEventFilter

  """Disjunction of `TrackingEventFilters`"""
  or: [TrackingEventFilter!]

  """Conjunction of `TrackingEventFilters`"""
  and: [TrackingEventFilter!]
}

"""A string of text in a particular language"""
type TranslatedText {
  """The language the text is written in (defaults to `iso639:en`)"""
  language: CodedConceptCurie!

  """The text itself"""
  text: String!
}

"""A filter for `TranslatedTexts`"""
input TranslatedTextFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `language`"""
  language: CodedConceptCurieFilter

  """Filter for `text`"""
  text: StringFilter

  """Negation of a `TranslatedTextFilter`"""
  not: TranslatedTextFilter

  """Disjunction of `TranslatedTextFilters`"""
  or: [TranslatedTextFilter!]

  """Conjunction of `TranslatedTextFilters`"""
  and: [TranslatedTextFilter!]
}

"""An input for `TranslatedTexts`"""
input TranslatedTextInput {
  """Set field `language`"""
  language: CodedConceptCurie!

  """Set field `text`"""
  text: String!
}

"""An input for updating `Categories`"""
input UpdateCategoryInput {
  """Specify the `Category` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `classification`"""
  classification: RelCodedConceptInput
}

"""An input for updating `ClientApps`"""
input UpdateClientAppInput {
  """Specify the `ClientApp` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `contactPoints`"""
  contactPoints: [RelContactPointInput!]

  """Set field `images`"""
  images: [RelImageRoleInput!]

  """Set field `privacyUrl`"""
  privacyUrl: URI

  """Set field `owner`"""
  owner: RelOrganizationInput
}

"""An input for updating `CodedConcepts`"""
input UpdateCodedConceptInput {
  """Specify the `CodedConcept` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `curie`"""
  curie: CodedConceptCurie

  """Set field `vocabulary`"""
  vocabulary: RelVocabularyInput
}

"""An input for updating `ContactPoints`"""
input UpdateContactPointInput {
  """Specify the `ContactPoint` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `value`"""
  value: String

  """Set field `isPrimary`"""
  isPrimary: Boolean
}

"""An input for updating `DataQualityMetrics`"""
input UpdateDataQualityMetricInput {
  """Specify the `DataQualityMetric` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `library`"""
  library: RelLibraryInput

  """Set field `version`"""
  version: String

  """Set field `expressions`"""
  expressions: [RelFunctionalExpressionRoleInput!]

  """Set field `unit`"""
  unit: RelCodedConceptInput

  """Set field `topic`"""
  topic: String
}

"""An input for updating `DataQualityMetricRoles`"""
input UpdateDataQualityMetricRoleInput {
  """Specify the `DataQualityMetricRole` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `dataQualityMetric`"""
  dataQualityMetric: RelDataQualityMetricInput

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for updating `DeliveryStreams`"""
input UpdateDeliveryStreamInput {
  """Specify the `DeliveryStream` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `batchMimeType`"""
  batchMimeType: String

  """Set field `maxBatchSize`"""
  maxBatchSize: Int

  """Set field `maxBatchTime`"""
  maxBatchTime: Duration
}

"""An input for updating `Devices`"""
input UpdateDeviceInput {
  """Specify the `Device` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `locationEvents`"""
  locationEvents: [RelLocationEventInput!]

  """Set field `model`"""
  model: RelDeviceModelInput

  """Set field `manufactureDate`"""
  manufactureDate: DateTime

  """Set field `expirationDate`"""
  expirationDate: DateTime

  """Set field `lotNumber`"""
  lotNumber: String

  """Set field `serialNumber`"""
  serialNumber: String

  """Set field `organizations`"""
  organizations: [RelOrganizationRoleInput!]

  """Set field `subjects`"""
  subjects: [RelSensorSubjectRoleInput!]

  """Set field `isPartOf`"""
  isPartOf: RelDeviceRoleInput

  """Set field `isCompleteKit`"""
  isCompleteKit: Boolean

  """Set field `hasParts`"""
  hasParts: [RelDeviceRoleInput!]
}

"""An input for updating `DeviceModels`"""
input UpdateDeviceModelInput {
  """Specify the `DeviceModel` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `manufacturer`"""
  manufacturer: RelOrganizationInput

  """Set field `brand`"""
  brand: String

  """Set field `modelNumber`"""
  modelNumber: String

  """Set field `isSensor`"""
  isSensor: Boolean

  """Set field `properties`"""
  properties: [RelCategoryInput!]

  """Set field `isPartOf`"""
  isPartOf: RelDeviceModelRoleInput

  """Set field `hasParts`"""
  hasParts: [RelDeviceModelRoleInput!]
}

"""An input for updating `DeviceModelRoles`"""
input UpdateDeviceModelRoleInput {
  """Specify the `DeviceModelRole` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `deviceModel`"""
  deviceModel: RelDeviceModelInput

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for updating `DeviceRoles`"""
input UpdateDeviceRoleInput {
  """Specify the `DeviceRole` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `device`"""
  device: RelDeviceInput

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for updating `FunctionalExpressions`"""
input UpdateFunctionalExpressionInput {
  """Specify the `FunctionalExpression` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `library`"""
  library: RelLibraryInput

  """Set field `version`"""
  version: String

  """Set field `language`"""
  language: RelCodedConceptInput

  """Set field `evaluator`"""
  evaluator: RelCodedConceptInput

  """Set field `target`"""
  target: RelCodedConceptInput

  """Set field `expression`"""
  expression: String

  """Set field `returnType`"""
  returnType: RelCodedConceptInput
}

"""An input for updating `FunctionalExpressionRoles`"""
input UpdateFunctionalExpressionRoleInput {
  """Specify the `FunctionalExpressionRole` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `functionalExpression`"""
  functionalExpression: RelFunctionalExpressionInput

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for updating `Identifiers`"""
input UpdateIdentifierInput {
  """Specify the `Identifier` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `namespace`"""
  namespace: URI

  """Set field `value`"""
  value: String

  """Set field `isPrivate`"""
  isPrivate: Boolean

  """Set field `issuer`"""
  issuer: RelOrganizationInput

  """Set field `algorithm`"""
  algorithm: RelCodedConceptInput

  """Set field `jurisdiction`"""
  jurisdiction: RelCodedConceptInput
}

"""An input for updating `Images`"""
input UpdateImageInput {
  """Specify the `Image` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `mimeType`"""
  mimeType: String
}

"""An input for updating `ImageRoles`"""
input UpdateImageRoleInput {
  """Specify the `ImageRole` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `image`"""
  image: RelImageInput

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for updating `Libraries`"""
input UpdateLibraryInput {
  """Specify the `Library` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `organization`"""
  organization: RelOrganizationInput

  """Set field `study`"""
  study: RelSensorStudyInput
}

"""An input for updating `LocationEvents`"""
input UpdateLocationEventInput {
  """Specify the `LocationEvent` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `location`"""
  location: RelLocationInput
}

"""An input for updating `Locations`"""
input UpdateLocationInput {
  """Specify the `Location` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `locale`"""
  locale: RelCodedConceptInput

  """Set field `address`"""
  address: RelPostalAddressInput

  """Set field `geo`"""
  geo: JSON

  """Set field `utcOffset`"""
  utcOffset: Int
}

"""An input for updating `LocationRoles`"""
input UpdateLocationRoleInput {
  """Specify the `LocationRole` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `location`"""
  location: RelLocationInput

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for updating `Organizations`"""
input UpdateOrganizationInput {
  """Specify the `Organization` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `contactPoints`"""
  contactPoints: [RelContactPointInput!]

  """Set field `images`"""
  images: [RelImageRoleInput!]

  """Set field `locations`"""
  locations: [RelLocationRoleInput!]

  """Set field `tokens`"""
  tokens: [RelTokenInput!]

  """Set field `superOrganization`"""
  superOrganization: RelOrganizationRoleInput

  """Set field `subOrganizations`"""
  subOrganizations: [RelOrganizationRoleInput!]

  """Set field `members`"""
  members: [RelPersonRoleInput!]

  """Set field `devices`"""
  devices: [RelDeviceRoleInput!]
}

"""An input for updating `OrganizationRoles`"""
input UpdateOrganizationRoleInput {
  """Specify the `OrganizationRole` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `organization`"""
  organization: RelOrganizationInput

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for updating `Persons`"""
input UpdatePersonInput {
  """Specify the `Person` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `contactPoints`"""
  contactPoints: [RelContactPointInput!]

  """Set field `images`"""
  images: [RelImageRoleInput!]

  """Set field `locations`"""
  locations: [RelLocationRoleInput!]

  """Set field `tokens`"""
  tokens: [RelTokenInput!]

  """Set field `nickname`"""
  nickname: String

  """Set field `age`"""
  age: Int

  """Set field `dob`"""
  dob: Date

  """Set field `gender`"""
  gender: RelCodedConceptInput

  """Set field `height`"""
  height: Float

  """Set field `weight`"""
  weight: Float
}

"""An input for updating `PersonRoles`"""
input UpdatePersonRoleInput {
  """Specify the `PersonRole` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `person`"""
  person: RelPersonInput

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for updating `PostalAddressComponents`"""
input UpdatePostalAddressComponentInput {
  """Specify the `PostalAddressComponent` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `value`"""
  value: String

  """Set field `abbreviation`"""
  abbreviation: String
}

"""An input for updating `PostalAddresses`"""
input UpdatePostalAddressInput {
  """Specify the `PostalAddress` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `text`"""
  text: String

  """Set field `country`"""
  country: RelCodedConceptInput

  """Set field `locale`"""
  locale: RelCodedConceptInput

  """Set field `stateProv`"""
  stateProv: RelCodedConceptInput

  """Set field `locality`"""
  locality: String

  """Set field `postalCode`"""
  postalCode: String

  """Set field `street1`"""
  street1: String

  """Set field `street2`"""
  street2: String

  """Set field `geo`"""
  geo: JSON

  """Set field `plusCode`"""
  plusCode: String

  """Set field `components`"""
  components: [RelPostalAddressComponentInput!]
}

"""An input for updating `SensorStudies`"""
input UpdateSensorStudyInput {
  """Specify the `SensorStudy` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `protocol_id`"""
  protocol_id: String

  """Set field `phase`"""
  phase: RelCodedConceptInput

  """Set field `primaryIndication`"""
  primaryIndication: RelCodedConceptInput

  """Set field `secondaryIndications`"""
  secondaryIndications: [RelCategoryInput!]

  """Set field `organizations`"""
  organizations: [RelOrganizationRoleInput!]

  """Set field `persons`"""
  persons: [RelPersonRoleInput!]

  """Set field `subjects`"""
  subjects: [RelSensorSubjectRoleInput!]

  """Set field `deliveryStreams`"""
  deliveryStreams: [RelDeliveryStreamInput!]

  """Set field `dataQualityMetrics`"""
  dataQualityMetrics: [RelDataQualityMetricRoleInput!]
}

"""An input for updating `SensorSubjects`"""
input UpdateSensorSubjectInput {
  """Specify the `SensorSubject` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `tokens`"""
  tokens: [RelTokenInput!]

  """Set field `person`"""
  person: RelPersonInput

  """Set field `study`"""
  study: RelSensorStudyInput

  """Set field `site`"""
  site: RelOrganizationInput

  """Set field `devices`"""
  devices: [RelDeviceRoleInput!]
}

"""An input for updating `SensorSubjectRoles`"""
input UpdateSensorSubjectRoleInput {
  """Specify the `SensorSubjectRole` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `sensorSubject`"""
  sensorSubject: RelSensorSubjectInput

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]
}

"""An input for updating `Tags`"""
input UpdateTagInput {
  """Specify the `Tag` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `value`"""
  value: JSON

  """Set field `tagIsSensitive`"""
  tagIsSensitive: Boolean
}

"""An input for updating `Tokens`"""
input UpdateTokenInput {
  """Specify the `Token` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `issuer`"""
  issuer: RelOrganizationInput

  """Set field `token`"""
  token: String
}

"""An input for updating `TrackingEvents`"""
input UpdateTrackingEventInput {
  """Specify the `TrackingEvent` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Associate with a context entity"""
  inContextOf: RelContextEntityInput

  """Set field `during`"""
  during: PeriodInput

  """Set field `itemNumber`"""
  itemNumber: Int

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `clientApp`"""
  clientApp: RelClientAppInput

  """Set field `user`"""
  user: RelPersonRoleInput
}

"""An input for updating `Vocabularies`"""
input UpdateVocabularyInput {
  """Specify the `Vocabulary` to update"""
  id: ID!

  """Set field `name`"""
  name: String

  """Set field `description`"""
  description: String

  """Set field `url`"""
  url: URI

  """Set field `identifiers`"""
  identifiers: [RelIdentifierInput!]

  """Set field `type`"""
  type: RelCodedConceptInput

  """Set field `categories`"""
  categories: [RelCategoryInput!]

  """Set field `tags`"""
  tags: [RelTagInput!]

  """Set field `trackingEvents`"""
  trackingEvents: [RelTrackingEventInput!]

  """Set field `library`"""
  library: RelLibraryInput

  """Set field `version`"""
  version: String

  """Set field `licence`"""
  licence: String

  """Set field `copyright`"""
  copyright: String

  """Set field `publisher`"""
  publisher: RelOrganizationInput
}

"""
A universal resource identifier

A URI that conforms to [RFC 3986](https://tools.ietf.org/html/rfc3986).
"""
scalar URI

"""
Part of a URI

Parts of a URI as defined in [RFC 3986](https://tools.ietf.org/html/rfc3986):

`[scheme]://[userinfo]@[host]:[port]/[path]?[query]#[fragment]`
`           \______authority______/`
"""
enum URIComponent {
  """The scheme part"""
  SCHEME

  """The authority part (userinfo, host and port)"""
  AUTHORITY

  """The userinfo part (username, password)"""
  USERINFO

  """The host part"""
  HOST

  """The port part"""
  PORT

  """The path part"""
  PATH

  """The query part"""
  QUERY

  """The fragment part"""
  FRAGMENT
}

"""A filter for `URIS`"""
input URIFilter {
  """True if the value missing"""
  isNull: Boolean

  """The part of the URI to target"""
  component: URIComponent

  """True if the URI is a URL"""
  isURL: Boolean

  """True if the URI is a URN"""
  isURN: Boolean

  """True if the URI is a safe CURIE"""
  isCURIE: Boolean

  """If true, matches are case sensitive"""
  caseSensitive: Boolean

  """The value contains the specified string"""
  contains: String

  """The value starts with the specified string"""
  startsWith: String

  """The value ends with the specified string"""
  endsWith: String

  """The value matches the specified POSIX regular expression"""
  matchesRegex: String

  """The value equals the specified `String`"""
  eq: String

  """The value does not equal the specified `String`"""
  ne: String

  """The value is strictly less than the specified `String`"""
  lt: String

  """The value is less than or equal to the specified `String`"""
  le: String

  """The value is strictly greater than the specified `String`"""
  gt: String

  """The value is greater than or equal to the specified `String`"""
  ge: String

  """The value is a member of the specified `String` list"""
  in: [String!]

  """Negation of a `URIFilter`"""
  not: URIFilter

  """Disjunction of `URIFilters`"""
  or: [URIFilter!]

  """Conjunction of `URIFilters`"""
  and: [URIFilter!]
}

"""A formal or informal ontology, terminology or enumeration of concepts"""
type Vocabulary implements Entity & Auditable & WithIdentifiers & InLibrary & WithCategories & WithTags & WithTrackingEvents {
  """Permanent system identifier for this `Vocabulary`"""
  id: ID! @unique

  """A common name for this `Vocabulary`"""
  name: String!

  """A brief description of this `Vocabulary`"""
  description: String

  """
  A url pointing to a resource with more detailed information about this `Vocabulary`
  """
  url: URI! @unique

  """A connection to any other identifiers for this `Vocabulary`"""
  identifiers(
    """Parameters to filter, sort, paginate the connection"""
    input: IdentifierConnectionInput
  ): IdentifierConnection!

  """A primary classification for this `Vocabulary`"""
  type: CodedConcept

  """
  Categories this `Vocabulary` embodies beyond its primary classified `type`
  """
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!

  """
  A connection to extensible metadata entries currently or previously associated with this `Vocabulary`
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!

  """History of tracking events for this `Vocabulary`"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!

  """The library this entity is a member of"""
  library: Library

  """The version of the entity"""
  version: String

  """The license terms governing use of this `Vocabulary`"""
  licence: String

  """A copyright statement from the publisher of this `Vocabulary`"""
  copyright: String

  """The publisher of this `Vocabulary`"""
  publisher: Organization

  """The most recent audit record for this `Vocabulary`"""
  audit: AuditRecord! @readonly

  """Audit record history of this `Vocabulary`"""
  audits(
    """Parameters to filter, sort, paginate the connection"""
    input: AuditRecordConnectionInput
  ): AuditRecordConnection! @resolve(with: "VIRTUAL") @readonly
}

"""A connection to `Vocabularies`"""
type VocabularyConnection implements EntityConnection {
  """`Vocabulary` nodes"""
  nodes: [Vocabulary!]

  """Total nodes in the connection"""
  totalCount: Int!

  """Information about current page of results"""
  pageInfo: PageInfo!
}

"""Filter, sort, paginate parameters for `VocabularyConnections`"""
input VocabularyConnectionInput {
  """A list of fields by which to order results (defaults to `id`)"""
  orderBy: [OrderBy!]

  """Limit the number of results returned per page"""
  limit: Int

  """
  The direction of limiting relative to the cursor (defaults to `FORWARD`)
  """
  direction: LimitDirection

  """The cursor to limit against"""
  cursor: ID

  """A filter for the underlying `Vocabularies`"""
  filter: VocabularyFilter
}

"""A filter for `Vocabularies`"""
input VocabularyFilter {
  """True if the field is missing"""
  isNull: Boolean

  """Filter for `id`"""
  id: IDFilter

  """Filter for `name`"""
  name: StringFilter

  """Filter for `description`"""
  description: StringFilter

  """Filter for `url`"""
  url: URIFilter

  """Filter for `identifiers`"""
  identifiers: IdentifierFilter

  """Filter for `type`"""
  type: CodedConceptFilter

  """Filter for `categories`"""
  categories: CategoryFilter

  """Filter for `tags`"""
  tags: TagFilter

  """Filter for `trackingEvents`"""
  trackingEvents: TrackingEventFilter

  """Filter for `library`"""
  library: LibraryFilter

  """Filter for `version`"""
  version: StringFilter

  """Filter for `licence`"""
  licence: StringFilter

  """Filter for `copyright`"""
  copyright: StringFilter

  """Filter for `publisher`"""
  publisher: OrganizationFilter

  """Filter for `audit`"""
  audit: AuditRecordFilter

  """Negation of a `VocabularyFilter`"""
  not: VocabularyFilter

  """Disjunction of `VocabularyFilters`"""
  or: [VocabularyFilter!]

  """Conjunction of `VocabularyFilters`"""
  and: [VocabularyFilter!]
}

"""
An interface for types that can be categorized

`Categories` are curated, generalized, hierarchical classifiers to broadly group entities. `Categories` are similar, but
distinct from `Tags`. While `Tags` allow users to bind specific custom metadata to an entity, `Categories` classify an
entity into one or more hierarchies of curated concepts. The first category associated with an entity becomes its `type`.
Additional categories can be associated with an entity as well. Each category lives in a hierarchy of types curated within
a formal vocabulary or ontology. `Categories` themselves are represented as `CodedConcepts`.
"""
interface WithCategories {
  """A primary classification for this $TYPE"""
  type: CodedConcept

  """Categories this $TYPE embodies beyond its primary classified `type`"""
  categories(
    """Parameters to filter, sort, paginate the connection"""
    input: CategoryConnectionInput
  ): CategoryConnection!
}

"""
An interface for types that have contact points

A contact point is a method for communicating with a party, like an email address, a phone number, a url or a social media handle.
"""
interface WithContacts {
  """Primary email address"""
  primaryEmail: ContactPoint @resolve(with: "CONNECTION_SUBSET", config: "{\n  connection: contactPoints\n  input: {\n    limit: 1\n    filter: {\n      and: [\n        {\n          isPrimary: {is: true}\n        },\n        {\n          type: {\n            curie: {eq: 'msc:contact-point/type/email'}\n          }\n        }\n      ]\n    }\n  }\n}")

  """Primary phone number"""
  primaryPhone: ContactPoint @resolve(with: "CONNECTION_SUBSET", config: "{\n  connection: contactPoints\n  input: {\n    limit: 1\n    filter: {\n      and: [\n        {\n          isPrimary: {is: true}\n        },\n        {\n          type: {\n            curie: {eq: 'msc:contact-point/type/phone'}\n          }\n        }\n      ]\n    }\n  }\n}")

  """A connection to query the contact points for this $TYPE"""
  contactPoints(
    """Parameters to filter, sort, paginate the connection"""
    input: ContactPointConnectionInput
  ): ContactPointConnection!
}

"""
A interface for types that can participate in data quality streams

A data quality stream is simply a stream of data associated with one or more
`DataQualityMetrics` that are dynamically computed as more data flows through
the stream. The computed metrics are captured as `DataQualityValues` and are
accessible through the `dataQualityValues` connection defined in this interface.
"""
interface WithDataQualityValues {
  """A connection to data quality values associated with this entity"""
  dataQualityValues(
    """Parameters to filter, sort, paginate the connection"""
    input: DataQualityValueConnectionInput
  ): DataQualityValueConnection!
}

"""An interface for types associated with formal evaluable expressions"""
interface WithFunctionalExpressions {
  """A connection to a set of expressions to compute a streaming value"""
  expressions(
    """Parameters to filter, sort, paginate the connection"""
    input: FunctionalExpressionRoleConnectionInput
  ): FunctionalExpressionRoleConnection!
}

"""
Interface for types that have additional identifiers assigned beyond the internal system identifier
"""
interface WithIdentifiers {
  """A connection to any other identifiers for this $TYPE"""
  identifiers(
    """Parameters to filter, sort, paginate the connection"""
    input: IdentifierConnectionInput
  ): IdentifierConnection!
}

"""An interface for an entity that has images"""
interface WithImages {
  """A connection to query the images for this $TYPE"""
  images(
    """Parameters to filter, sort, paginate the connection"""
    input: ImageRoleConnectionInput
  ): ImageRoleConnection!
}

"""
An interface for types whose location can be tracked across time

An entity with location events can have at most one current location and zero or more past locations.
"""
interface WithLocationEvents {
  """A connection to query places this $TYPE has been"""
  locationEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: LocationEventConnectionInput
  ): LocationEventConnection!
}

"""
An interface for an entity that is associated with one or more regular locations

Unlike the `WithLocationEvents`, this interface describes entities that have one or more
static locations, like an organization that may have multiple offices, or a person that has a
home address and a work address.
"""
interface WithLocations {
  """A connection to query locations associated with this $TYPE"""
  locations(
    """Parameters to filter, sort, paginate the connection"""
    input: LocationRoleConnectionInput
  ): LocationRoleConnection!
}

"""
An interface for types that can be associated with extensible metadata

`Tags` are key/value pairs users can attach to entities to support custom search and organizational use cases.
`Tags` are similar, but distinct from `Categories`. `Tags` are more specific than `Categories`. `Categories`
are hierarchical, general labels that classify entities broadly. `Tags` define specific details about an entity, in
addition to the fields already defined for the type. They allow you to attach custom fields.
"""
interface WithTags {
  """
  A connection to extensible metadata entries currently or previously associated with this $TYPE
  """
  tags(
    """Parameters to filter, sort, paginate the connection"""
    input: TagConnectionInput
  ): TagConnection!
}

"""
An interface for agents that require tokens to unlock functionality

Often, enties with agency, like people, subjects, or users, may receive opaque tokens for
some purpose, such as an invitation to unlock functionality in a target system. This interface
supports these use cases.
"""
interface WithTokens {
  """The connection of tokens associated with an agent"""
  tokens(
    """Parameters to filter, sort, paginate the connection"""
    input: TokenConnectionInput
  ): TokenConnection!
}

"""
An interface to track lifecycle events in the history of an entity

`TrackingEvents` capture important events in the lifecycle of an entity. These
are *not* intended to capture data mutation events of the sort that normally
populate database audit trails. Rather, they represent real-world events, like a
visit to a clinic or the provision of a sensor device to a patient.
"""
interface WithTrackingEvents {
  """History of tracking events for this $TYPE"""
  trackingEvents(
    """Parameters to filter, sort, paginate the connection"""
    input: TrackingEventConnectionInput
  ): TrackingEventConnection!
}

"""An interface for types with a permanent system identity"""
interface Entity {
  """Permanent system identifier for this $TYPE"""
  id: ID! @unique

  """A common name for this $TYPE"""
  name: String

  """A brief description of this $TYPE"""
  description: String

  """
  A url pointing to a resource with more detailed information about this $TYPE
  """
  url: URI @unique
}

